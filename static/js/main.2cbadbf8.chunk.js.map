{"version":3,"sources":["media/mars7.jpg","media/mars-rover.svg","media/mars1.jpg","media/mars2.jpg","media/mars3.jpg","media/mars4.png","media/mars5.jpg","media/mars6.jpg","media/mars8.jpg","media/mars9.jpg","components/LANDING.png","components/Cell.js","components/Grid.js","components/Navbar.js","Algo/dfs.js","Algo/customPriorityQueue.js","Algo/Dijkstra.js","Algo/Utility.js","Algo/AStar.js","Algo/TSP.js","Algo/BFS.js","Algo/BiBFS.js","Algo/BiAstar.js","Algo/BidirectionalDijkstra.js","Algo/Graph.js","App.js","components/Home.js","Root.js","serviceWorker.js","index.js"],"names":["module","exports","currentPointer","props","i","j","key","style","width","height","border","backgroundColor","WebkitUserSelect","onClick","changeSource","toggleSource","changeState","src","rover","alt","finalShortestPath","changesourcefunc","changeDestination","changedestfunc","startPoint","endPoint","wall","onTouchStart","e","window","event","buttons","onMouseEnter","visited","visited2","empty","Grid","gridList","rowList","bi","pointer","pointer2","push","grid","parseInt","className","map","object","index","Navbar","state","selectedAlgo","currentAlgo","checkedA","this","document","getElementById","innerHTML","multiDestination","editButtons","setState","algo","target","getAttribute","toString","setString","handle","id","href","FormGroup","FormControlLabel","control","Switch","color","checked","onChange","hc","label","disabled","visual","toggleDestination","type","fontWeight","visualize","data-toggle","multipledestinations","onMouseDown","handleChange","randomize","clearWalls","clearPath","newSpeed","React","Component","DFS","a","flag","start","end","speed","Array","fill","stack","ok","path","length","current","pop","Promise","done","setTimeout","list","concat","showModal","pathdisplay","parent","left","right","PriorityQueue","comparator","b","_heap","_comparator","size","values","forEach","value","_siftUp","poppedValue","peek","bottom","_swap","_siftDown","replacedValue","node","_greater","maxChild","Dijkstra","queue","dist","par","ptr","reverse","directions","isFeasable","isFeasable2","neighbors","answer","direction","neighbor","biNeighbors","AStar","w1","w2","computeHeuristics","pq","heuristics","dp","isEmpty","item","TSP","unvisited","Set","add","now","totalpath","pathfound","togo","findOptimalVertex","delete","sourceMapped","graph","map2","destinationMapped","allPairShortest","aStarForTSP","newpath","AppState","Math","abs","source","BFS","shift","BiBFS","queue1","queue2","reached","isGoodCell","par1","par2","revcurrent","flag1","flag2","list1","list2","dir","neighbour1","neighbour2","breakpoint","ok1","undefined","pth2","BiAstar","reverseheuristics","reverseHeuristics","visited1","forwardPQ","backwardPQ","dist1","dist2","current1","current2","neighbor1","neighbor2","meetpoint2","meetpoint1","BidirectionalDijkstra","Graph","adjacencyList","map1","Map","counter","constructGraph","floydWarshall","vertex","destination","addVertex","isNotWall","x","y","addEdge","k","min","propTypes","PropTypes","array","D","handleClose","show","Modal","onHide","backdrop","keyboard","opacity","Header","closeButton","Title","Body","Footer","Button","variant","PathModal","pathlength","marginLeft","App","dfs","bind","bfs","dijkstra","aStar","tsp","biBFS","biAstar","bidirectionalDijkstra","changedSource","changedDestination","modalshow","hideModal","hidePathModal","pathmodal","randomizeMatrix","clearGrid","newGrid","floor","random","changeSpeed","selectAlgo","name","console","log","g","Welcome","toggleChange","option","isChecked1","isChecked2","userAnswer","question","onSubmit","httpGet","theUrl","xmlHttp","XMLHttpRequest","open","send","responseText","Home","redirect","handleShow","res","JSON","parse","replace","alert","to","background","Background","backgroundPosition","backgroundSize","backgroundRepeat","borderRadius","float","fontSize","marginTop","position","margin","images","mars7","mars1","mars2","mars5","mars3","mars4","mars8","mars9","mars6","duration","transition","Root","exact","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2cbadbf8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mars7.f9354f0a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars-rover.59452d47.svg\";","module.exports = __webpack_public_path__ + \"static/media/mars1.7a8733c3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars2.7bf85db4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars3.6a21f55b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars4.17d38c2f.png\";","module.exports = __webpack_public_path__ + \"static/media/mars5.548733ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars6.97edad93.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars8.474640cc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars9.4aee5d3f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/LANDING.ee7b2b54.png\";","import rover from \"../media/mars-rover.svg\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nexport const currentPointer = function(props, i, j) {\r\n  return (<div\r\n    key={i + j}\r\n    style={{width: \"35px\", height: \"35px\", border: \"1.5px solid black\",\r\n      backgroundColor: \"#69fff1\", WebkitUserSelect: \"none\",\r\n    }}\r\n    onClick={() => {\r\n      if (props.changeSource) {\r\n        props.toggleSource(i, j);\r\n      } else {\r\n        props.changeState(i, j);\r\n      }\r\n    }}\r\n  >\r\n    <img src={rover} alt='start' style={{width: \"25px\", height: \"25px\"}}/>\r\n  </div>);\r\n};\r\n\r\nexport const finalShortestPath = function(props, i, j) {\r\n  return ( <div\r\n    key={i + j}\r\n    style={{width: \"35px\", height: \"35px\", border: \"1.5px solid black\",\r\n      backgroundColor: \"#fee440\", WebkitUserSelect: \"none\",\r\n    }}\r\n    onClick={() => {\r\n      if (props.changeSource) {\r\n        props.changesourcefunc(i, j);\r\n      } else if (props.changeDestination) {\r\n        props.changedestfunc(i, j);\r\n      } else {\r\n        props.changeState(i, j);\r\n      }\r\n    }}\r\n  >\r\n  </div>);\r\n};\r\nexport const startPoint = function(props, i, j) {\r\n  return (\r\n    <div\r\n      key={i + j}\r\n      style={{width: \"35px\", height: \"35px\", border: \"1.5px solid black\",\r\n        backgroundColor: \"#71b340\", WebkitUserSelect: \"none\",\r\n      }}\r\n      onClick={() => {\r\n        if (props.changeSource) {\r\n          props.changesourcefunc(i, j);\r\n        } else if (props.changeDestination) {\r\n          props.changedestfunc(i, j);\r\n        } else {\r\n          props.changeState(i, j);\r\n        }\r\n      }\r\n      }\r\n    >\r\n    </div>);\r\n};\r\nexport const endPoint = function(props, i, j) {\r\n  return (\r\n    <div\r\n      key={i + j}\r\n      style={{\r\n        width: \"35px\", height: \"35px\", border: \"1.5px solid black\",\r\n        backgroundColor: \"#ee0000\", WebkitUserSelect: \"none\",\r\n      }}\r\n      onClick={() => {\r\n        if (props.changeSource) {\r\n          props.changesourcefunc(i, j);\r\n        } else if (props.changeDestination) {\r\n          props.changedestfunc(i, j);\r\n        } else {\r\n          props.changeState(i, j);\r\n        }\r\n      }\r\n      }\r\n\r\n    >\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const wall = function(props, i, j) {\r\n  return (\r\n    <div\r\n      key={i + j}\r\n      style={{\r\n        width: \"35px\", height: \"35px\", border: \"1.5px solid black\",\r\n        backgroundColor: \"#540b0e\", WebkitUserSelect: \"none\",\r\n      }}\r\n      onClick={() => {\r\n        if (props.changeSource) {\r\n          props.changesourcefunc(i, j);\r\n        } else if (props.changeDestination) {\r\n          props.changedestfunc(i, j);\r\n        } else {\r\n          props.changeState(i, j);\r\n        }\r\n      }}\r\n      onTouchStart={(e) => {\r\n        if (window.event.buttons === 1) {\r\n          props.changeState(i, j);\r\n        }\r\n      }\r\n      }\r\n      onMouseEnter={(e) => {\r\n        if (window.event.buttons === 1) {\r\n          props.changeState(i, j);\r\n        }\r\n      }\r\n      }\r\n    >\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const visited = function(props, i, j) {\r\n  return (\r\n    <div\r\n      key={i + j}\r\n      style={{\r\n        width: \"35px\", height: \"35px\", border: \"1.5px solid black\",\r\n        backgroundColor: \"#e09891\", WebkitUserSelect: \"none\",\r\n      }}\r\n      onClick={() => {\r\n        if (props.changeSource) {\r\n          props.changesourcefunc(i, j);\r\n        } else if (props.changeDestination) {\r\n          props.changedestfunc(i, j);\r\n        } else {\r\n          props.changeState(i, j);\r\n        }\r\n      }}\r\n    >\r\n    </div>\r\n  );\r\n};\r\nexport const visited2 = function(props, i, j) {\r\n  return (\r\n    <div\r\n      key={i + j}\r\n      style={{\r\n        width: \"35px\", height: \"35px\", border: \"1.5px solid black\",\r\n        backgroundColor: \"#666666\", WebkitUserSelect: \"none\",\r\n      }}\r\n      onClick={() => {\r\n        if (props.changeSource) {\r\n          props.changesourcefunc(i, j);\r\n        } else if (props.changeDestination) {\r\n          props.changedestfunc(i, j);\r\n        } else {\r\n          props.changeState(i, j);\r\n        }\r\n      }}\r\n    >\r\n    </div>\r\n  );\r\n};\r\nexport const empty = function(props, i, j) {\r\n  return ( <div\r\n    key={i + j}\r\n    style={{\r\n      width: \"35px\", height: \"35px\", border: \"1.5px solid black\",\r\n      WebkitUserSelect: \"none\",\r\n    }}\r\n    onClick={() => {\r\n      if (props.changeSource) {\r\n        props.changesourcefunc(i, j);\r\n      } else if ((props.changeDestination)) {\r\n        props.changedestfunc(i, j);\r\n      } else {\r\n        props.changeState(i, j);\r\n      }\r\n    }}\r\n    onTouchStart={(e) => {\r\n      if (window.event.buttons === 1) {\r\n        props.changeState(i, j);\r\n      }\r\n    }\r\n    }\r\n    onMouseEnter={(e) => {\r\n      if (window.event.buttons === 1) {\r\n        props.changeState(i, j);\r\n      }\r\n    }\r\n    }\r\n  >\r\n  </div>);\r\n};\r\n\r\nempty.propTypes = {\r\n  changeSource: PropTypes.bool,\r\n  changeDestination: PropTypes.bool,\r\n  changesourcefunc: PropTypes.func,\r\n  changedestfunc: PropTypes.func,\r\n  changeState: PropTypes.func,\r\n  multipledestinations: PropTypes.bool,\r\n\r\n};\r\n\r\nvisited.propTypes = {\r\n  changeSource: PropTypes.bool,\r\n  changeDestination: PropTypes.bool,\r\n  changesourcefunc: PropTypes.func,\r\n  changedestfunc: PropTypes.func,\r\n  changeState: PropTypes.func,\r\n\r\n};\r\nvisited2.propTypes = {\r\n  changeSource: PropTypes.bool,\r\n  changeDestination: PropTypes.bool,\r\n  changesourcefunc: PropTypes.func,\r\n  changedestfunc: PropTypes.func,\r\n  changeState: PropTypes.func,\r\n\r\n};\r\n\r\nwall.propTypes ={\r\n  changeSource: PropTypes.bool,\r\n  changeDestination: PropTypes.bool,\r\n  changesourcefunc: PropTypes.func,\r\n  changedestfunc: PropTypes.func,\r\n  changeState: PropTypes.func,\r\n};\r\n\r\nfinalShortestPath.propTypes = {\r\n  changeSource: PropTypes.bool,\r\n  changeDestination: PropTypes.bool,\r\n  changesourcefunc: PropTypes.func,\r\n  changedestfunc: PropTypes.func,\r\n  changeState: PropTypes.func,\r\n};\r\n\r\n\r\nstartPoint.propTypes = {\r\n  changeSource: PropTypes.bool,\r\n  changeDestination: PropTypes.bool,\r\n  changesourcefunc: PropTypes.func,\r\n  changedestfunc: PropTypes.func,\r\n  changeState: PropTypes.func,\r\n};\r\n\r\nendPoint.propTypes = {\r\n  changeSource: PropTypes.bool,\r\n  changeDestination: PropTypes.bool,\r\n  changesourcefunc: PropTypes.func,\r\n  changedestfunc: PropTypes.func,\r\n  changeState: PropTypes.func,\r\n};\r\n\r\ncurrentPointer.propTypes = {\r\n  changeSource: PropTypes.bool,\r\n  toggleSource: PropTypes.func,\r\n  changeState: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {currentPointer, wall, finalShortestPath, startPoint,\r\n  endPoint, visited, visited2, empty} from \"./Cell\";\r\n\r\n/**\r\n *\r\n * @param {props} props\r\n * @return {*}\r\n * @constructor\r\n */\r\nfunction Grid(props) {\r\n  const height = props.height; const width = props.width;\r\n  const gridList = [];\r\n\r\n  /* status of grid states for reference\r\n      0: normal cell\r\n      1:wall\r\n      2:visited during search\r\n      3:Special Points : start\r\n      4:Special Points : end\r\n      5:Cells in Final Shortest Path\r\n      */\r\n\r\n  for (let i = 0; i < height; i++) {\r\n    const rowList = [];\r\n    for (let j = 0; j < width; j++) {\r\n      if (!props.bi && props.pointer &&\r\n          i === props.pointer[0] &&\r\n          j === props.pointer[1]) {\r\n        rowList.push(currentPointer(props, i, j));\r\n      } else if (!props.bi && props.pointer2 &&\r\n          i === props.pointer2[0] &&\r\n          j === props.pointer2[1]) {\r\n        rowList.push(currentPointer(props, i, j));\r\n      } else if (props.grid[parseInt(i, 10)][parseInt(j, 10)] === 1) {\r\n        rowList.push(wall(props, i, j));\r\n      } else if (props.grid[parseInt(i, 10)][parseInt(j, 10)] === 2) {\r\n        rowList.push(visited(props, i, j));\r\n      } else if (props.grid[parseInt(i, 10)][parseInt(j, 10)] === 3) {\r\n        rowList.push(startPoint(props, i, j));\r\n      } else if (props.grid[parseInt(i, 10)][parseInt(j, 10)] === 4) {\r\n        rowList.push(endPoint(i, j));\r\n      } else if (props.grid[parseInt(i, 10)][parseInt(j, 10)] === 5) {\r\n        rowList.push(finalShortestPath(props, i, j));\r\n      } else if (props.grid[parseInt(i, 10)][parseInt(j, 10)] === 6) {\r\n        rowList.push(visited2(props, i, j));\r\n      } else {\r\n        rowList.push(empty(props, i, j));\r\n      }\r\n    }\r\n    gridList.push(rowList);\r\n  }\r\n  return (\r\n    <div className=\"p-4\">\r\n      {gridList.map((object, index) => {\r\n        return (\r\n          <div className=\"row justify-content-center flex-nowrap\" key = {index}>\r\n            {object}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\nGrid.propTypes = {\r\n  height: PropTypes.number,\r\n  width: PropTypes.number,\r\n  grid: PropTypes.array,\r\n  changeState: PropTypes.func,\r\n  start: PropTypes.array,\r\n  end: PropTypes.array,\r\n  changeSource: PropTypes.bool,\r\n  changeDestination: PropTypes.bool,\r\n  changesourcefunc: PropTypes.func,\r\n  changedestfunc: PropTypes.func,\r\n  bi: PropTypes.bool,\r\n  pointer: PropTypes.array,\r\n  pointer2: PropTypes.array,\r\n};\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n/**\r\n *\r\n * @param {props} props\r\n * @return {*}\r\n * @constructor\r\n */\r\nclass Navbar extends React.Component {\r\n  /**\r\n   *@param {props} props\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      selectedAlgo: props.currentAlgo,\r\n      checkedA: false,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * changes state in app when user toggles the switch for multiple destination\r\n   */\r\n  hc() {\r\n      if (!this.state.checkedA) {\r\n          this.editButtons();\r\n      } else {\r\n          document.getElementById('chngDestBtn').innerHTML = 'Change Destination';\r\n          this.props.multiDestination();\r\n      }\r\n      this.setState({checkedA: !this.state.checkedA});\r\n  }\r\n\r\n\r\n    editButtons() {\r\n        document.getElementById('chngDestBtn').innerHTML = 'Add Destination';\r\n        this.props.multiDestination();\r\n    }\r\n  /**\r\n   * Changes the Visualize Algo button according to the state\r\n   * @param {anything} event\r\n   */\r\n  handleChange(event) {\r\n    const algo = (event.target.getAttribute(\"id\")).toString();\r\n    const setString = \"Visualize  \" + algo + \"!\";\r\n    document.getElementById(\"visualizebtn\").innerHTML =\r\n        \"<button id='visualizebtn' \" +\r\n        \"class='btn' \" +\r\n        \"type='button' \" +\r\n        \"style='font-weight:bold'>\" +\r\n        setString +\r\n        \"</button>\";\r\n\r\n    this.props.handle(algo);\r\n    this.setState({selectedAlgo: algo});\r\n  }\r\n  /**\r\n   *\r\n   * @return {*}\r\n   */\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand-lg\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"navbar-header\">\r\n              <a id=\"refreshButton\"\r\n                className=\"navbar-brand\"\r\n                href=\"/mars-colonization-project/App\">\r\n                {/* eslint-disable-next-line max-len */}\r\n                  Conquer Mars! <i className=\"fa fa-rocket\"/>\r\n                <span className=\"icon\" />\r\n              </a>\r\n            </div>\r\n            <ul className=\"navbar-nav\">\r\n              <FormGroup>\r\n                <FormControlLabel\r\n                  control={<Switch color = \"primary\"\r\n                    checked={this.state.checkedA}\r\n                    onChange={() => this.hc()} />\r\n                  }\r\n                  label=\"Multiple Destinations\"\r\n                  style={{color: \"peachpuff\"}}\r\n\r\n                />\r\n              </FormGroup>\r\n              <li className=\"nav-item\">\r\n                <button onClick={this.props.toggleSource}\r\n                  className=\"btn\"\r\n                  style={{\r\n                    backgroundColor: \"#71b340\",\r\n                  }}\r\n                  disabled={this.props.visual}\r\n                >\r\n                    Change Source\r\n                </button>\r\n              </li>\r\n              <li className=\"nav-item\"\r\n                >\r\n                <button onClick={this.props.toggleDestination}\r\n                  className=\"btn\"\r\n                  id=\"chngDestBtn\"\r\n                  style={{\r\n                    backgroundColor: \"#6a040f\",\r\n                    color: \"peachpuff\",\r\n                  }}\r\n                  disabled={this.props.visual}\r\n                >\r\n                    Change Destination\r\n                </button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n\r\n                <button\r\n                  id=\"visualizebtn\"\r\n                  className=\"btn\"\r\n                  type=\"button\"\r\n                  style={{fontWeight: \"bolder\"}}\r\n                  onClick={this.props.visualize}\r\n                  disabled={this.props.visual}\r\n                >\r\n                    Visualize\r\n                </button>\r\n              </li>\r\n              <li className=\"nav-item dropdown\"\r\n                id = \"AlgosList\">\r\n                <button\r\n                  className=\"btn dropdown-toggle\"\r\n                  type=\"button\"\r\n                  data-toggle=\"dropdown\"\r\n                  disabled={this.props.visual}\r\n                >\r\n                    Algorithms <span className=\"caret\"/>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                  <li >\r\n                    <button id=\"Dijkstra\"\r\n                      disabled={this.props.multipledestinations}\r\n                      onMouseDown={(event) => this.handleChange(event)}>\r\n                        Dijkstra Algorithm</button>\r\n                  </li>\r\n                  <li >\r\n                    <button id=\"A*\"\r\n                      disabled={this.props.multipledestinations}\r\n                      onClick={(event) => this.handleChange(event)}>\r\n                        A* Search </button>\r\n                  </li>\r\n                  <li >\r\n                    <button id=\"DFS\"\r\n                      disabled={this.props.multipledestinations}\r\n                      onClick={(event) => this.handleChange(event)}>\r\n                        DFS </button>\r\n                  </li>\r\n                  <li >\r\n                    <button id=\"BFS\"\r\n                      disabled={this.props.multipledestinations}\r\n                      onMouseDown={(event) => this.handleChange(event)}>\r\n                        BFS</button>\r\n                  </li>\r\n                  <li >\r\n                    <button id=\"biDijkstra\"\r\n                      disabled={this.props.multipledestinations}\r\n                      onMouseDown={(event) => this.handleChange(event)}>\r\n                        Bidirectional Dijkstra</button>\r\n                  </li>\r\n                  <li >\r\n                    <button id='biBFS'\r\n                      disabled={this.props.multipledestinations}\r\n                      onMouseDown={(event) => this.handleChange(event)}>\r\n                        Bidirectional BFS </button>\r\n                  </li>\r\n                  <li>\r\n                    <button id='Best-FS'\r\n                      disabled={this.props.multipledestinations}\r\n                      onMouseDown={(event) => this.handleChange(event)}>\r\n                        Greedy best-first search\r\n                    </button>\r\n                  </li>\r\n                  <li >\r\n                    <button id='TSP'\r\n                      onMouseDown={(event) => this.handleChange(event)}>\r\n                        Travelling Salesman\r\n                    </button>\r\n                  </li>\r\n                  <li >\r\n                    <button id='Weighted-AStar'\r\n                      disabled={this.props.multipledestinations}\r\n                      onMouseDown={(event) => this.handleChange(event)}>\r\n                        Weighted A*\r\n                    </button>\r\n                  </li>\r\n                  <li >\r\n                    <button\r\n                      id='BiAstar'\r\n                      disabled={this.props.multipledestinations}\r\n                      onMouseDown={(event) => this.handleChange(event)}>\r\n                        Bidirectional A*\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <button onClick={this.props.randomize}\r\n                  className='btn'\r\n                  disabled={this.props.visual}>\r\n                    Randomize\r\n                </button>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <button onClick = {this.props.clearWalls}\r\n                  className='btn'\r\n                  disabled={this.props.visual}>\r\n                    Clear Board\r\n                </button>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <button onClick = {this.props.clearPath}\r\n                  className='btn'\r\n                  disabled={this.props.visual}>\r\n                    Clear Path\r\n                </button>\r\n              </li>\r\n              <li className='nav-item dropdown'>\r\n                <button\r\n                  className='btn dropdown-toggle'\r\n                  type='button'\r\n                  data-toggle='dropdown'\r\n                  disabled={this.props.visual}\r\n                >\r\n                    Speed <span className='caret'/>\r\n                </button>\r\n                <ul className='dropdown-menu'>\r\n                  <li onClick={() => this.props.newSpeed(1)}>Fast\r\n                  </li>\r\n                  <li onClick={() => this.props.newSpeed(350)}>Medium\r\n                  </li>\r\n                  <li onClick={() => this.props.newSpeed(750)}>Slow\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n        <div className='d-flex flex-row flex-wrap m-2 justify-content-around'\r\n          id='Legend'>\r\n          <div className='d-flex p-2'>Start:\r\n            <div\r\n              style={{\r\n                width: \"20px\",\r\n                height: \"20px\",\r\n                backgroundColor: \"#71b340\",\r\n                WebkitUserSelect: \"none\",\r\n              }}\r\n            >\r\n            </div>\r\n          </div>\r\n          <div className='d-flex p-2'>End:\r\n            <div\r\n              style={{\r\n                width: \"20px\",\r\n                height: \"20px\",\r\n                backgroundColor: \"#ee0000\",\r\n                WebkitUserSelect: \"none\",\r\n              }}\r\n            >\r\n            </div>\r\n          </div>\r\n          <div className='d-flex p-2'>Wall:\r\n            <div\r\n              style={{\r\n                width: \"20px\",\r\n                height: \"20px\",\r\n                backgroundColor: \"#540b0e\",\r\n                WebkitUserSelect: \"none\",\r\n              }}\r\n            >\r\n            </div>\r\n          </div>\r\n          <div className='d-flex p-2'>Visited Node:\r\n            <div\r\n              style={{\r\n                width: \"20px\",\r\n                height: \"20px\",\r\n                backgroundColor: \"#e09891\",\r\n                WebkitUserSelect: \"none\",\r\n              }}\r\n            >\r\n            </div>\r\n          </div>\r\n          <div className='d-flex p-2'>Shortest Path Node:\r\n            <div\r\n              style={{\r\n                width: \"20px\",\r\n                height: \"20px\",\r\n                backgroundColor: \"#fee440\",\r\n                WebkitUserSelect: \"none\",\r\n              }}\r\n            >\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nNavbar.propTypes = {\r\n  clearWalls: PropTypes.func,\r\n  clearPath: PropTypes.func,\r\n  randomize: PropTypes.func,\r\n  newSpeed: PropTypes.func,\r\n  currentAlgo: PropTypes.string,\r\n  selectAlgo: PropTypes.func,\r\n  visualize: PropTypes.func,\r\n  visual: PropTypes.bool,\r\n  handle: PropTypes.func,\r\n  toggleSource: PropTypes.func,\r\n  toggleDestination: PropTypes.func,\r\n  changeGrid: PropTypes.func,\r\n  changeDestination: PropTypes.func,\r\n  multiDestination: PropTypes.func,\r\n  multipledestinations: PropTypes.bool,\r\n};\r\nexport default Navbar;\r\n","export const DFS = async function() {\r\n  const grid = this.state.grid;\r\n  const flag = 1;\r\n  const start = this.state.start; const end = this.state.end;\r\n  const height = this.state.height; const width = this.state.width;\r\n  const speed = this.state.speed;\r\n  const par = Array(height).fill().map(() => Array(width).fill(0));\r\n  par[start[0][0]][start[0][1]] = [start[0][0], start[0][1]];\r\n  let stack = [start[0]]; // stack for dfs\r\n  let ok = true;\r\n  const path = [];\r\n  while (stack.length !== 0) {\r\n    const current = stack[stack.length - 1];\r\n    stack.pop(); // pop from stack\r\n    if (current[0] < 0 || current[0] >= height) {\r\n      // for the current to not go out of bounds\r\n      continue;\r\n    }\r\n    if (current[1] < 0 || current[1] >= width) {\r\n      continue;\r\n    }\r\n    if (grid[current[0]][current[1]] === 2 ||\r\n        grid[current[0]][current[1]] === 1) {\r\n      continue; // if its a wall or visited cell, continue\r\n    }\r\n    if (grid[current[0]][current[1]] === 3) {\r\n      if (ok) {\r\n        ok = false;\r\n      } else {\r\n        continue;\r\n      }\r\n    }\r\n    path.push([current[0], current[1]]);\r\n    if (grid[current[0]][current[1]] === 4) {\r\n      this.setState({grid, pointer: current});\r\n      await new Promise((done) =>\r\n        setTimeout(() => done(), this.state.speed));\r\n      break;\r\n    } else {\r\n      const list = []; // temporary array to store next points\r\n      list.push([current[0] + 1, current[1]]); // Go right\r\n      list.push([current[0], current[1] + 1]); // Go Above\r\n      list.push([current[0] - 1, current[1]]); // Go Left\r\n      list.push([current[0], current[1] - 1]); // Go below\r\n      if (grid[current[0]][current[1]] !== 3) {\r\n        this.state.grid[current[0]][current[1]] = 2;\r\n      }\r\n      stack = stack.concat(list);\r\n    }\r\n    this.setState({grid, pointer: current});\r\n    await new Promise((done) =>\r\n      setTimeout(() => done(), speed));// To slow down the speed of Animation\r\n  }\r\n  if (flag === 0) {\r\n    this.setState({grid});\r\n  }\r\n  const pointer = this.state.pointer;\r\n  if (pointer[0] !== end[0][0] || pointer[1] !== end[0][1]) {\r\n    this.showModal();\r\n    this.setState({visual: false});\r\n    return;\r\n  }\r\n  await this.pathdisplay(path);\r\n};\r\n","\r\nconst top = 0;\r\nconst parent = (i) => ((i + 1) >>> 1) - 1;\r\nconst left = (i) => (i << 1) + 1;\r\nconst right = (i) => (i + 1) << 1;\r\n/**\r\n * from https://stackoverflow.com/a/42919752\r\n */\r\nclass PriorityQueue {\r\n  /**\r\n   *\r\n   * @param {anything} comparator\r\n   */\r\n  constructor(comparator = (a, b) => a < b) {\r\n    this._heap = [];\r\n    this._comparator = comparator;\r\n  }\r\n\r\n  /**\r\n   *  size of priority queue\r\n   * @return {number}\r\n   */\r\n  size() {\r\n    return this._heap.length;\r\n  }\r\n\r\n  /**\r\n   * returns if priority queue is empty\r\n   * @return {boolean}\r\n   */\r\n  isEmpty() {\r\n    return this.size() === 0;\r\n  }\r\n\r\n  /**\r\n   * returns the top element of priority queue\r\n   * @return {*}\r\n   */\r\n  peek() {\r\n    return this._heap[parseInt(top, 10)];\r\n  }\r\n\r\n  /**\r\n   * pushes values to the priority queue\r\n   * @param {anything} values\r\n   * @return {number}\r\n   */\r\n  push(...values) {\r\n    values.forEach((value) => {\r\n      this._heap.push(value);\r\n      this._siftUp();\r\n    });\r\n    return this.size();\r\n  }\r\n\r\n  /**\r\n   *  pop from priority queue\r\n   * @return {*}\r\n   */\r\n  pop() {\r\n    const poppedValue = this.peek();\r\n    const bottom = this.size() - 1;\r\n    if (bottom > top) {\r\n      this._swap(top, bottom);\r\n    }\r\n    this._heap.pop();\r\n    this._siftDown();\r\n    return poppedValue;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} value\r\n   * @return {*}\r\n   */\r\n  replace(value) {\r\n    const replacedValue = this.peek();\r\n    this._heap[parseInt(top, 10)] = value;\r\n    this._siftDown();\r\n    return replacedValue;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} i\r\n   * @param {number} j\r\n   * @return {boolean}\r\n   * @private\r\n   */\r\n  _greater(i, j) {\r\n    return this._comparator(this._heap[parseInt(i, 10)], this._heap[parseInt(j, 10)]);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} i\r\n   * @param {number} j\r\n   * @private\r\n   */\r\n  _swap(i, j) {\r\n    [this._heap[parseInt(i, 10)], this._heap[parseInt(j, 10)]] =\r\n        [this._heap[parseInt(j, 10)], this._heap[parseInt(i, 10)]];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @private\r\n   */\r\n  _siftUp() {\r\n    let node = this.size() - 1;\r\n    while (node > top && this._greater(node, parent(node))) {\r\n      this._swap(node, parent(node));\r\n      node = parent(node);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @private\r\n   */\r\n  _siftDown() {\r\n    let node = top;\r\n    while (\r\n      (left(node) < this.size() && this._greater(left(node), node)) ||\r\n            (right(node) < this.size() && this._greater(right(node), node))\r\n    ) {\r\n      const maxChild = (right(node) < this.size() &&\r\n          this._greater(right(node), left(node))) ?\r\n          right(node) : left(node);\r\n      this._swap(node, maxChild);\r\n      node = maxChild;\r\n    }\r\n  }\r\n}\r\nexport default PriorityQueue;\r\n","import PriorityQueue from \"./customPriorityQueue\";\r\n\r\nexport const Dijkstra = async function() {\r\n  const start = this.state.start; const end = this.state.end;\r\n  const height = this.state.height; const width = this.state.width;\r\n  const queue = new PriorityQueue((a, b) => a[1] < b[1]);\r\n  queue.push([start[0], 0]);\r\n  const grid = this.state.grid;\r\n  const dist = Array(height).fill().map(() =>\r\n    Array(width).fill(100000));\r\n  const par = Array(height).fill().map(() =>\r\n    Array(width).fill(0));\r\n  this.setState({path: [], pointer: start[0]});\r\n  dist[start[0][0]][start[0][1]] = 0;\r\n  par[start[0][0]][start[0][1]] =\r\n      [start[0][0], start[0][1]];\r\n  let ok = true;\r\n  while (queue.size() !== 0) {\r\n    const current = queue.peek()[0];\r\n    queue.pop(); // pop the queue\r\n    if (grid[current[0]][current[1]] === 1 ||\r\n        grid[current[0]][current[1]] === 2) {\r\n      continue; // if a wall or visited continue\r\n    }\r\n    if (grid[current[0]][current[1]] === 3) {\r\n      if (ok) {\r\n        ok = false;\r\n      } else {\r\n        continue;\r\n      } // if you are again pushing the source point, its !ok\r\n    }\r\n    if (grid[current[0]][current[1]] === 4) {\r\n      this.setState({grid, pointer: current});\r\n      await new Promise((done) =>\r\n        setTimeout(() => done(), this.state.speed));\r\n      break;\r\n    } else {\r\n      // dijkstra picks the minimum weight path,\r\n      // updates it in its distance array\r\n      if (current[0] !== height - 1 &&\r\n          grid[current[0] + 1][current[1]] !== 2) {\r\n        if (dist[current[0] + 1][current[1]] >\r\n            dist[current[0]][current[1]] + 1) {\r\n          dist[current[0] + 1][current[1]] = dist[current[0]][current[1]] + 1;\r\n          par[current[0] + 1][current[1]] = [current[0], current[1]];\r\n          queue.push([[current[0] + 1, current[1]],\r\n            dist[current[0] + 1][current[1]]]);\r\n        }\r\n      }\r\n      if (current[1] !== width - 1 &&\r\n          grid[current[0]][current[1] + 1] !== 2) {\r\n        if (dist[current[0]][current[1] + 1] >\r\n            dist[current[0]][current[1]] + 1) {\r\n          dist[current[0]][current[1] + 1] = dist[current[0]][current[1]] + 1;\r\n          par[current[0]][current[1] + 1] = [current[0], current[1]];\r\n          queue.push([[current[0], current[1] + 1],\r\n            dist[current[0]][current[1] + 1]]);\r\n        }\r\n      }\r\n      if (current[0] !== 0 && grid[current[0] - 1][current[1]] !== 2) {\r\n        if (dist[current[0] - 1][current[1]] >\r\n            dist[current[0]][current[1]] + 1) {\r\n          dist[current[0] - 1][current[1]] = dist[current[0]][current[1]] + 1;\r\n          par[current[0] - 1][current[1]] = [current[0], current[1]];\r\n          queue.push([[current[0] - 1, current[1]],\r\n            dist[current[0] - 1][current[1]]]);\r\n        }\r\n      }\r\n      if (current[1] !== 0 && grid[current[0]][current[1] - 1] !== 2) {\r\n        if (dist[current[0]][current[1] - 1] >\r\n            dist[current[0]][current[1]] + 1) {\r\n          dist[current[0]][current[1] - 1] = dist[current[0]][current[1]] + 1;\r\n          par[current[0]][current[1] - 1] = [current[0], current[1]];\r\n          queue.push([[current[0], current[1] - 1],\r\n            dist[current[0]][current[1]-1]]);\r\n        }\r\n      }\r\n      if (grid[current[0]][current[1]] !== 3) {\r\n        grid[current[0]][current[1]] = 2; // mark it as visited\r\n      }\r\n      this.setState({grid, pointer: current});\r\n      await new Promise((done) =>\r\n        setTimeout(() => done(), this.state.speed));\r\n    }\r\n  }\r\n  if (this.state.pointer[0] !== end[0][0] ||\r\n      this.state.pointer[1] !== end[0][1]) {\r\n    this.showModal(); // return if path not found\r\n    this.setState({visual: false});\r\n    return;\r\n  }\r\n  let ptr = [end[0][0], end[0][1]];\r\n  ok = true;\r\n  while (ok) {\r\n    this.state.path = [...this.state.path, ptr];\r\n    if (ptr[0] === start[0][0] &&\r\n        ptr[1] === start[0][1]) {\r\n      ok = false;\r\n    } else {\r\n      ptr = par[ptr[0]][ptr[1]];\r\n    }\r\n  }\r\n  this.state.path = this.state.path.reverse();\r\n  await this.pathdisplay(this.state.path);\r\n};\r\n","const directions = [[0, 1], [1, 0], [0, -1], [-1, 0]];\r\nconst isFeasable = (i, j, grid) => {\r\n  if (i < 0 || i >=grid.length || j < 0 || j >=grid[0].length) {\r\n    return false;\r\n  }\r\n  return (grid[parseInt(i, 10)][parseInt(j, 10)] === 0 ||\r\n      grid[parseInt(i, 10)][parseInt(j, 10)] === 4);\r\n};\r\n\r\nconst isFeasable2 = (i, j, grid) => {\r\n  if (i < 0 || i >=grid.length || j < 0 || j >=grid[0].length) {\r\n    return false;\r\n  }\r\n  return !(grid[parseInt(i, 10)][parseInt(j, 10)] === 1 ||\r\n      grid[parseInt(i, 10)][parseInt(j, 10)] === 3 ||\r\n      grid[parseInt(i, 10)][parseInt(j, 10)] === 4);\r\n};\r\n\r\nexport const neighbors = (i, j, grid) => {\r\n  const answer = [];\r\n  for (const direction of directions) {\r\n    const neighbor = [i + direction[0], j + direction[1]];\r\n    if (isFeasable(neighbor[0], neighbor[1], grid)) {\r\n      answer.push([neighbor[0], neighbor[1]]);\r\n    }\r\n  }\r\n  return answer;\r\n};\r\n\r\nexport const biNeighbors = (i, j, grid) => {\r\n  const answer = [];\r\n  for (const direction of directions) {\r\n    const neighbor = [i + direction[0], j + direction[1]];\r\n    if (isFeasable2(neighbor[0], neighbor[1], grid)) {\r\n      answer.push([neighbor[0], neighbor[1]]);\r\n    }\r\n  }\r\n  return answer;\r\n};\r\n\r\n\r\n","import PriorityQueue from \"./customPriorityQueue\";\r\nimport {neighbors} from \"./Utility\";\r\n\r\nexport const AStar = async function(w1, w2) {\r\n  this.computeHeuristics();\r\n  this.setState({path: [], pointer: this.state.start[0]});\r\n  const height = this.state.height; const width = this.state.width;\r\n  const pq = new PriorityQueue((a, b) => a[1] < b[1]);\r\n  const start = this.state.start; const end = this.state.end;\r\n  const heuristics = this.state.heuristics; const speed = this.state.speed;\r\n  pq.push([start[0], heuristics[start[0][0]][start[0][1]]]);\r\n  const dp = Array(height).fill().map(() => Array(width).fill([]));\r\n  const par = Array(height).fill().map(() => Array(width).fill([]));\r\n  par[start[0][0]][start[0][1]] = start[0];\r\n  while (!pq.isEmpty()) {\r\n    const grid = this.state.grid;\r\n    const current = pq.peek()[0];\r\n    pq.pop();\r\n    this.setState({pointer: current});\r\n    if (grid[current[0]][current[1]] === 4) {\r\n      this.setState({grid, pointer: current});\r\n      break;\r\n    }\r\n    const item = neighbors(current[0], current[1], this.state.grid);\r\n    for (let i =0; i < item.length; i++) {\r\n      if ((dp[item[parseInt(i, 10)][0]][item[parseInt(i, 10)][1]].length ===\r\n          0) ||\r\n          (dp[item[parseInt(i, 10)][0]][item[parseInt(i, 10)][1]].length >\r\n              dp[current[0]][current[1]].length + 1)) {\r\n        pq.push([item[parseInt(i, 10)],\r\n          w1*(dp[current[0]][current[1]].length+1) +\r\n          w2*this.state.\r\n              heuristics[item[parseInt(i, 10)][0]][item[parseInt(i, 10)][1]]]);\r\n        par[item[parseInt(i, 10)][0]][item[parseInt(i, 10)][1]] = current;\r\n        dp[item[parseInt(i, 10)][0]][item[parseInt(i, 10)][1]] =\r\n            [...dp[current[0]][current[1]], current];\r\n      }\r\n    }\r\n    grid[current[0]][current[1]] = 2;\r\n    this.setState({grid, pointer: current});\r\n    await new Promise((done) =>\r\n      setTimeout(() => done(), speed));\r\n  }\r\n  const pointer = this.state.pointer;\r\n  if (pointer[0] !== end[0][0] || pointer[1] !== end[0][1]) {\r\n    this.showModal(); // return not found\r\n    this.setState({visual: false});\r\n    return;\r\n  }\r\n  let ptr = end[0];\r\n  let path = [];\r\n  let ok = true;\r\n  while (ok) {\r\n    path = [...path, ptr];\r\n    if (ptr[0] === start[0][0] &&\r\n        ptr[1] === start[0][1]) {\r\n      ok = false;\r\n    } else {\r\n      ptr = par[ptr[0]][ptr[1]];\r\n    }\r\n  }\r\n  this.state.path = path.reverse();\r\n  await this.pathdisplay(this.state.path);\r\n};\r\n","import PriorityQueue from \"./customPriorityQueue\";\r\nexport const TSP = async function() {\r\n  const unvisited = new Set();\r\n  for (const item of this.state.end) {\r\n    unvisited.add(item);\r\n  }\r\n  let now = this.state.start[0];\r\n  let totalpath = [];\r\n  let pathfound = true;\r\n  while (unvisited.size) {\r\n    const togo = this.findOptimalVertex(this, unvisited, now);\r\n    unvisited.delete(togo);\r\n    const sourceMapped = this.state.graph.map2[now];\r\n    const destinationMapped = this.state.graph.map2[togo];\r\n    if (this.state.graph.allPairShortest[sourceMapped][destinationMapped] === 1000000) {\r\n      pathfound = false;\r\n      break;\r\n    }\r\n    const newpath = await this.aStarForTSP(this, now, togo);\r\n    totalpath = totalpath.concat(newpath);\r\n    now = togo;\r\n  }\r\n  if (pathfound) {\r\n    await this.pathdisplay(totalpath);\r\n  } else {\r\n    this.showModal();\r\n    this.setState({visual: false});\r\n  }\r\n};\r\n\r\nexport const aStarForTSP = async function(AppState, start, end) {\r\n  const heuristics = AppState.state.heuristics;\r\n  for (let i = 0; i < AppState.state.height; i++) {\r\n    for (let j = 0; j < AppState.state.width; j++) {\r\n      heuristics[parseInt(i, 10)][parseInt(j, 10)] =\r\n          Math.abs(end[0]-i) + Math.abs(end[1]-j);\r\n    }\r\n  }\r\n  AppState.setState({heuristics,\r\n    path: [], pointer: start, bi: true});\r\n  const pq = new PriorityQueue((a, b) => a[1] < b[1]);\r\n  pq.push([start, AppState.state.heuristics[start[0]][start[1]]]);\r\n  const dp = Array(30)\r\n      .fill()\r\n      .map(() => Array(40).fill([]));\r\n  while (!pq.isEmpty()) {\r\n    const grid = AppState.state.grid;\r\n    const current = pq.peek()[0];\r\n    pq.pop();\r\n    AppState.setState({current});\r\n    if (grid[current[0]][current[1]] === 4) {\r\n      AppState.setState({grid, pointer: current});\r\n      break;\r\n    }\r\n    if (current[1] !== AppState.state.width - 1 &&\r\n        (grid[current[0]][current[1] + 1] === 0 ||\r\n            grid[current[0]][current[1] + 1] === 4)) {\r\n      if (dp[current[0]][current[1] + 1].length === 0 ||\r\n          dp[current[0]][current[1] + 1].length >\r\n          [...dp[current[0]][current[1]], current].length) {\r\n        pq.push([[current[0], current[1] + 1],\r\n          dp[current[0]][current[1]].length+\r\n        AppState.state.heuristics[current[0]][current[1] + 1]]);\r\n        dp[current[0]][current[1] + 1] =\r\n            [...dp[current[0]][current[1]], current];\r\n      }\r\n    }\r\n    if (current[0] !== AppState.state.height - 1 &&\r\n        ((grid[current[0] + 1][current[1]] === 0) ||\r\n            grid[current[0] + 1][current[1]] === 4)) {\r\n      if (dp[current[0] + 1][current[1]].length === 0 ||\r\n          dp[current[0] + 1][current[1]].length >\r\n          [...dp[current[0]][current[1]], current]) {\r\n        pq.push([[current[0] + 1, current[1]],\r\n          dp[current[0]][current[1]].length+\r\n        AppState.state.heuristics[current[0] + 1][current[1]]]);\r\n        dp[current[0] + 1][current[1]] =\r\n            [...dp[current[0]][current[1]], current];\r\n      }\r\n    }\r\n    if (current[0] !== 0 && (grid[current[0] - 1][current[1]] === 0 ||\r\n        (grid[current[0] - 1][current[1]] === 4))) {\r\n      if (dp[current[0] - 1][current[1]].length === 0 ||\r\n          dp[current[0] - 1][current[1]].length >\r\n          [...dp[current[0]][current[1]], current]) {\r\n        pq.push([[current[0] - 1,\r\n          current[1]], dp[current[0]][current[1]].length+\r\n        AppState.state.heuristics[current[0] - 1][current[1]]]);\r\n        dp[current[0] - 1][current[1]] =\r\n            [...dp[current[0]][current[1]], current];\r\n      }\r\n    }\r\n    if (current[1] !== 0 && (grid[current[0]][current[1] - 1] === 0 ||\r\n        (grid[current[0]][current[1]-1] === 4))) {\r\n      if (dp[current[0]][current[1] - 1].length === 0 ||\r\n          dp[current[0]][current[1] - 1].length >\r\n          [...dp[current[0]][current[1]], current].length) {\r\n        pq.push([[current[0], current[1] - 1],\r\n          dp[current[0]][current[1]].length+\r\n        AppState.state.heuristics[current[0]][current[1] - 1]]);\r\n        dp[current[0]][current[1] - 1] =\r\n            [...dp[current[0]][current[1]], current];\r\n      }\r\n    }\r\n    grid[current[0]][current[1]] = 2; // AppState node as visited\r\n    AppState.setState({grid, pointer: current});\r\n    await new Promise((done) =>\r\n      setTimeout(() => done(), AppState.state.speed));\r\n  }\r\n  const grid = AppState.state.grid;\r\n  for (let i = 0; i < AppState.state.height; i++) {\r\n    for (let j = 0; j < AppState.state.width; j++) {\r\n      if (grid[parseInt(i, 10)][parseInt(j, 10)] ===2) {\r\n        grid[parseInt(i, 10)][parseInt(j, 10)] = 0;\r\n      }\r\n    }\r\n  }\r\n  grid[start[0]][start[1]] = 0;\r\n  grid[end[0]][end[1]] = 3;\r\n  await AppState.setState({grid});\r\n  return dp[end[0]][end[1]];\r\n};\r\nexport const findOptimalVertex = (AppState, unvisited, source) => {\r\n  const pq = new PriorityQueue((a, b) => a[1] < b[1]);\r\n  const sourceMapped = AppState.state.graph.map2[source];\r\n  for (const item of unvisited) {\r\n    const destinationMapped = AppState.state.graph.map2[item];\r\n    pq.push([item,\r\n      AppState.state.graph.allPairShortest[sourceMapped][destinationMapped]]);\r\n  }\r\n  return pq.peek()[parseInt(0, 10)];\r\n};\r\n","import {neighbors} from \"./Utility\";\r\nexport const BFS = async function() {\r\n  const start = this.state.start; const end = this.state.end;\r\n  const height = this.state.height; const width = this.state.width;\r\n  const speed = this.state.speed; const grid = this.state.grid;\r\n  this.setState({pointer: start[0]});\r\n  const queue = [start[0]]; // queue needed in bfs\r\n  const par = Array(height).fill().map(() => Array(width).fill([]));\r\n  par[start[0][0]][start[0][1]] = start[0];\r\n  let ok = true;\r\n  while (queue.length !== 0) {\r\n    const current = queue[0];\r\n    queue.shift(); // pop the first item from the queue\r\n    if (grid[current[0]][current[1]] === 1 ||\r\n        grid[current[0]][current[1]] === 2) {\r\n      continue;\r\n      // if its a wall or already visited cell then continue\r\n    }\r\n    if (grid[current[0]][current[1]] === 3) {\r\n      // if again visits the start point\r\n      if (ok) {\r\n        ok = false;\r\n      } else {\r\n        continue;\r\n      }\r\n    }\r\n    if (grid[current[0]][current[1]] === 4) {\r\n      // reached goal\r\n      this.setState({grid});\r\n      this.setState({pointer: current});\r\n      await new Promise((done) =>\r\n        setTimeout(() => done(), speed));\r\n      break;\r\n    } else {\r\n      const item = neighbors(current[0], current[1], this.state.grid);\r\n      // finding neighbours of the current cell\r\n      for (const neighbor of item) {\r\n        par[neighbor[0]][neighbor[1]] = [current[0], current[1]];\r\n        queue.push([neighbor[0], neighbor[1]]);\r\n        // push the neighbours in the queue\r\n      }\r\n      if (grid[current[0]][current[1]] !== 3) {\r\n        grid[current[0]][current[1]] = 2;\r\n        // if not end/start, mark the node as visited\r\n      }\r\n      this.setState({grid, pointer: current});\r\n\r\n      await new Promise((done) =>\r\n        setTimeout(() => done(), speed)); // to slow down the speed of animation\r\n    }\r\n  }\r\n  const pointer = this.state.pointer;\r\n  if (pointer[0] !== end[0][0] || pointer[1] !== end[0][1]) {\r\n    // display path not found\r\n    this.showModal();\r\n    this.setState({visual: false});\r\n    return;\r\n  }\r\n  let ptr = end[0];\r\n  let path = [];\r\n  ok = true;\r\n  while (ok) {\r\n    path = [...path, ptr];\r\n    if (ptr[0] === start[0][0] &&\r\n        ptr[1] === start[0][1]) {\r\n      ok = false;\r\n    } else {\r\n      ptr = par[ptr[0]][ptr[1]];\r\n    }\r\n  }\r\n  this.state.path = path.reverse();\r\n  await this.pathdisplay(this.state.path);\r\n};\r\n","export const BiBFS = async function() {\r\n  this.setState({path: [], pointer:\r\n        this.state.start[0], pointer2: this.state.end[0]});\r\n  let queue1 = [this.state.start[0]];\r\n  let queue2 = [this.state.end[0]];\r\n  const height = this.state.height;\r\n  const width = this.state.width;\r\n  const grid = this.state.grid;\r\n  const directions = [[0, 1], [1, 0], [0, -1], [-1, 0]];\r\n  let reached = true;\r\n  const isGoodCell = (i, j) => {\r\n    if (i < 0 || i >=height || j < 0 || j >=width) {\r\n      return false;\r\n    }\r\n    return !(grid[parseInt(i, 10)][parseInt(j, 10)] === 1 ||\r\n        grid[parseInt(i, 10)][parseInt(j, 10)]=== 3 ||\r\n        grid[parseInt(i, 10)][parseInt(j, 10)] === 4);\r\n  };\r\n  const start = this.state.start[0];\r\n  const end = this.state.end[0];\r\n\r\n  const par1 = Array(height).fill().map(() => Array(width).fill([]));\r\n  const par2 = Array(height).fill().map(() => Array(width).fill([]));\r\n  const visited = Array(height).fill().map(() => Array(width).fill(0));\r\n\r\n\r\n  par1[start[0]][start[1]] = start;\r\n  par2[end[0]][end[1]] = end;\r\n\r\n  let ptr;\r\n  while (queue1.length !==0 && queue2.length !== 0) {\r\n    const current = queue1[0]; // current of forward path\r\n    const revcurrent = queue2[0]; // current pointer of reverse path\r\n    let flag1=false; let flag2=false;\r\n    if (visited[current[0]][current[1]] === 2) {\r\n      ptr = current; break;\r\n    } else {\r\n      visited[current[0]][current[1]] = 1;\r\n    }\r\n    if (visited[revcurrent[0]][revcurrent[1]] === 1) {\r\n      ptr = revcurrent; break;\r\n    } else {\r\n      visited[revcurrent[0]][revcurrent[1]] = 2;\r\n    }\r\n\r\n    queue1.shift();\r\n    queue2.shift();\r\n    const list1 = [];\r\n    const list2 = [];\r\n\r\n    for (const dir of directions) {\r\n      const neighbour1 = [current[0] + dir[0], current[1] + dir[1]];\r\n      if (isGoodCell(neighbour1[0], neighbour1[1])) {\r\n        if (visited[neighbour1[0]][neighbour1[1]] === 1 ) {\r\n          continue;\r\n        }\r\n        if (grid[neighbour1[0]][neighbour1[1]] === 2) {\r\n          continue;\r\n        }\r\n        par1[neighbour1[0]][neighbour1[1]] = current;\r\n        if (visited[neighbour1[0]][neighbour1[1]] === 2 ) {\r\n          ptr=neighbour1; flag1=true; break;\r\n        }\r\n        if ( neighbour1[0]===start[0] && neighbour1[1]===start[1]) {\r\n          continue;\r\n        }\r\n\r\n        list1.push(neighbour1);\r\n        grid[neighbour1[0]][neighbour1[1]] = 2;\r\n      }\r\n    }\r\n    queue1 = queue1.concat(list1);\r\n    if (flag1) {\r\n      break;\r\n    }\r\n    for (const dir of directions) {\r\n      const neighbour2 = [revcurrent[0] + dir[0], revcurrent[1] + dir[1]];\r\n      if (isGoodCell(neighbour2[0], neighbour2[1])) {\r\n        if (visited[neighbour2[0]][neighbour2[1]] === 2 ) {\r\n          continue;\r\n        }\r\n        if (grid[neighbour2[0]][neighbour2[1]] === 6) {\r\n          continue;\r\n        }\r\n        par2[neighbour2[0]][neighbour2[1]] = revcurrent;\r\n        if (visited[neighbour2[0]][neighbour2[1]] === 1 ) {\r\n          ptr = neighbour2; flag2=true; break;\r\n        }\r\n\r\n        if (neighbour2[0]===end[0] && neighbour2[1]===end[1]) {\r\n          continue;\r\n        }\r\n        list2.push(neighbour2);\r\n        grid[neighbour2[0]][neighbour2[1]] = 6;\r\n      }\r\n    }\r\n    queue2 = queue2.concat(list2);\r\n    this.setState({grid,\r\n      pointer: current, pointer2: revcurrent, bi: true});\r\n    await new Promise((done) =>\r\n      setTimeout(() => done(), this.state.speed));\r\n    // To slow down the speed of Animation\r\n    if (flag1 || flag2) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  const breakpoint = ptr;\r\n  let ok1 = true;\r\n  while (ok1) {\r\n    this.state.path = [...this.state.path, ptr];\r\n    if (ptr === undefined) {\r\n      reached = false;\r\n      ok1 = false;\r\n      break;\r\n    } else if (ptr[0] === this.state.start[0][0] &&\r\n        ptr[1] === this.state.start[0][1]) {\r\n      ok1 = false;\r\n      break;\r\n    } else {\r\n      ptr = par1[ptr[0]][ptr[1]];\r\n    }\r\n  }\r\n  if (!reached) {\r\n    this.showModal(); // return not found\r\n    this.setState({visual: false});\r\n    return;\r\n  }\r\n  this.state.path = this.state.path.reverse();\r\n  ptr = par2[breakpoint[0]][breakpoint[1]];\r\n\r\n  let pth2= [];\r\n  let ok = true;\r\n  while (ok) {\r\n    pth2 = [...pth2, ptr];\r\n    if (ptr === undefined) {\r\n      reached = false;\r\n      ok = false;\r\n      break;\r\n    } else if (ptr[0] === this.state.end[0][0] &&\r\n        ptr[1] === this.state.end[0][1]) {\r\n      ok = false;\r\n      break;\r\n    } else {\r\n      ptr = par2[ptr[0]][ptr[1]];\r\n    }\r\n  }\r\n  if (!reached) {\r\n    this.showModal(); // return not found\r\n    this.setState({visual: false});\r\n    return;\r\n  }\r\n  this.state.path = this.state.path.concat(pth2);\r\n  await this.pathdisplay(this.state.path);\r\n};\r\n","import PriorityQueue from \"./customPriorityQueue\";\r\nimport {biNeighbors} from \"./Utility\";\r\nexport const BiAstar = async function() {\r\n  this.computeHeuristics();\r\n  const heuristics = this.state.heuristics;\r\n  const reverseheuristics = this.state.reverseHeuristics;\r\n  const start = this.state.start[0];\r\n  const end = this.state.end[0];\r\n  const height = this.state.height; const width = this.state.width;\r\n  let meetpoint1; let meetpoint2; // the breakpoint from either direction\r\n  this.setState({pointer: start[0], pointer2: end[0], bi: true});\r\n  const visited1 = Array(height).fill().map(() =>\r\n    Array(width).fill(0));\r\n  // visited array to aid finding and stopping at common points\r\n  const visited2 = Array(height).fill().map(() =>\r\n    Array(width).fill(0));\r\n  const forwardPQ = new PriorityQueue((a, b) => a[1] < b[1]);\r\n  // forward PQ for points from Start end\r\n  const backwardPQ = new PriorityQueue((a, b) => a[1] < b[1]);\r\n  // Priority queue for points from the other end\r\n  forwardPQ.push([start, 0]);\r\n  backwardPQ.push([end, 0]);\r\n  // Parent arrays to restore the path\r\n  const par1 = Array(height).fill().map(() => Array(width).fill([]));\r\n  const par2 = Array(height).fill().map(() => Array(width).fill([]));\r\n  par1[start[0]][start[1]] = start;\r\n  par2[end[0]][end[1]] = end;\r\n  let reached = true;\r\n  let ok = 0;\r\n  // initialising the distance array to a Maxima\r\n  const dist1 = Array(height).fill().map(() =>\r\n    Array(width).fill(100000));\r\n  const dist2 = Array(height).fill().map(() =>\r\n    Array(width).fill(100000));\r\n  dist1[start[0]][start[1]] = 0;\r\n  dist2[end[0]][end[1]] = 0;\r\n\r\n  while (!forwardPQ.isEmpty() && !backwardPQ.isEmpty()) {\r\n    const grid = this.state.grid;\r\n    const current1 = forwardPQ.peek()[0];\r\n    const current2 = backwardPQ.peek()[0];\r\n    this.setState({pointer: current1, pointer2: current2});\r\n    await new Promise((done) =>\r\n      setTimeout(() => done(), this.state.speed));\r\n    visited1[current1[0]][current1[1]] = 1; // marking current pointers visited\r\n    visited2[current2[0]][current2[1]] = 1;\r\n    forwardPQ.pop(); backwardPQ.pop();\r\n    const neighbor1 = biNeighbors(current1[0], current1[1], this.state.grid);\r\n    const neighbor2 = biNeighbors(current2[0], current2[1], this.state.grid);\r\n    for (const item of neighbor1) {\r\n      // iterating over the neighbours from front\r\n      if (item[0] === start[0] && item[1] === start[1]) {\r\n        continue;\r\n      }\r\n      if (visited2[item[0]][item[1]] === 1) {\r\n        meetpoint2 = item; meetpoint1 = current1;\r\n        ok = 1;\r\n        break;\r\n      }\r\n\r\n      if ( dist1[current1[0]][current1[1]] + 1< dist1[item[0]][item[1]]) {\r\n        dist1[item[0]][item[1]] = dist1[current1[0]][current1[1]] + 1;\r\n        par1[item[0]][item[1]] = current1;\r\n        forwardPQ.push([item,\r\n          dist1[item[0]][item[1]] + heuristics[item[0]][item[1]]]);\r\n      }\r\n    }\r\n    if (ok === 1) {\r\n      break;\r\n    }\r\n    // iterating over neighbours from back\r\n    for (const item of neighbor2) {\r\n      if (item[0] === end[0] && item[1] === end[1]) {\r\n        continue;\r\n      }\r\n\r\n      if (visited1[item[0]][item[1]] === 1) {\r\n        meetpoint2 = current2;\r\n        meetpoint1 = item;\r\n        ok = 1;\r\n        break;\r\n      }\r\n      if ( dist2[current2[0]][current2[1]] + 1< dist2[item[0]][item[1]]) {\r\n        dist2[item[0]][item[1]] = dist2[current2[0]][current2[1]] + 1;\r\n        par2[item[0]][item[1]] = current2;\r\n        backwardPQ.push([item,\r\n          dist2[item[0]][item[1]] + reverseheuristics[item[0]][item[1]]] );\r\n      }\r\n    }\r\n    grid[current1[0]][current1[1]] = 2;\r\n    grid[current2[0]][current2[1]] = 6;\r\n    grid[start[0]][start[1]]=3;\r\n    grid[end[0]][end[1]]=4;\r\n    this.setState({grid});\r\n    if (ok === 1) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Retrieving the found path\r\n  let ptr = meetpoint1;\r\n  let ok1 = true;\r\n  while (ok1) {\r\n    this.state.path = [...this.state.path, ptr];\r\n    if (ptr === undefined) {\r\n      reached = false;\r\n      ok1 = false;\r\n    } else if (ptr[0] === start[0] && ptr[1] === start[1]) {\r\n      ok1 = false;\r\n    } else {\r\n      ptr = par1[ptr[0]][ptr[1]];\r\n    }\r\n  }\r\n  if (!reached) {\r\n    this.showModal(); // return not found\r\n    this.setState({visual: false});\r\n    return;\r\n  }\r\n  this.state.path = this.state.path.reverse();\r\n  ptr = meetpoint2;\r\n  let pth2= [];\r\n  ok = true;\r\n  while (ok) {\r\n    pth2 = [...pth2, ptr];\r\n    if (ptr === undefined) {\r\n      reached = false;\r\n      ok = false;\r\n    } else if (ptr[0] === end[0] && ptr[1] === end[1]) {\r\n      ok = false;\r\n    } else {\r\n      ptr = par2[ptr[0]][ptr[1]];\r\n    }\r\n  }\r\n  if (!reached) {\r\n    this.showModal(); // return not found\r\n    this.setState({visual: false});\r\n    return;\r\n  }\r\n  pth2 = pth2.reverse();\r\n  this.state.path = this.state.path.concat(pth2);\r\n  // console.log(this.state.path);\r\n  await this.pathdisplay(this.state.path);\r\n};\r\n","import PriorityQueue from \"./customPriorityQueue\";\r\nimport {biNeighbors} from \"./Utility\";\r\n\r\nexport const BidirectionalDijkstra = async function() {\r\n  const start = this.state.start[0];\r\n  const end = this.state.end[0];\r\n  const height = this.state.height; const width = this.state.width;\r\n  let meetpoint1; let meetpoint2; // the breakpoint from either direction\r\n  this.setState({pointer: start[0], pointer2: end[0], bi: true});\r\n  const visited1 = Array(height).fill().map(() =>\r\n    Array(width).fill(0));\r\n  // visited array to aid finding and stopping at common points\r\n  const visited2 = Array(height).fill().map(() =>\r\n    Array(width).fill(0));\r\n  const forwardPQ = new PriorityQueue((a, b) => a[1] < b[1]);\r\n  // forward PQ for points from Start end\r\n  const backwardPQ = new PriorityQueue((a, b) => a[1] < b[1]);\r\n  // Priority queue for points from the other end\r\n  forwardPQ.push([start, 0]);\r\n  backwardPQ.push([end, 0]);\r\n  // Parent arrays to restore the path\r\n  const par1 = Array(height).fill().map(() => Array(width).fill([]));\r\n  const par2 = Array(height).fill().map(() => Array(width).fill([]));\r\n  par1[start[0]][start[1]] = start;\r\n  par2[end[0]][end[1]] = end;\r\n  let reached = true;\r\n  let ok = 0;\r\n  // initialising the distance array to a Maxima\r\n  const dist1 = Array(height).fill().map(() =>\r\n    Array(width).fill(100000));\r\n  const dist2 = Array(height).fill().map(() =>\r\n    Array(width).fill(100000));\r\n  dist1[start[0]][start[1]] = 0;\r\n  dist2[end[0]][end[1]] = 0;\r\n\r\n  while (!forwardPQ.isEmpty() && !backwardPQ.isEmpty()) {\r\n    const grid = this.state.grid;\r\n    const current1 = forwardPQ.peek()[0];\r\n    const current2 = backwardPQ.peek()[0];\r\n    this.setState({pointer: current1, pointer2: current2});\r\n    await new Promise((done) =>\r\n      setTimeout(() => done(), this.state.speed));\r\n    visited1[current1[0]][current1[1]] = 1; // marking current pointers visited\r\n    visited2[current2[0]][current2[1]] = 1;\r\n    forwardPQ.pop(); backwardPQ.pop();\r\n    const neighbor1 = biNeighbors(current1[0], current1[1], this.state.grid);\r\n    const neighbor2 = biNeighbors(current2[0], current2[1], this.state.grid);\r\n    for (const item of neighbor1) {\r\n      // iterating over the neighbours from front\r\n      if (item[0] === start[0] && item[1] === start[1]) {\r\n        continue;\r\n      }\r\n      if (visited2[item[0]][item[1]] === 1) {\r\n        meetpoint2 = item; meetpoint1 = current1;\r\n        ok = 1;\r\n        break;\r\n      }\r\n\r\n      if ( dist1[current1[0]][current1[1]] + 1< dist1[item[0]][item[1]]) {\r\n        dist1[item[0]][item[1]] = dist1[current1[0]][current1[1]] + 1;\r\n        par1[item[0]][item[1]] = current1;\r\n        forwardPQ.push([item,\r\n          dist1[item[0]][item[1]]]);\r\n      }\r\n    }\r\n    if (ok === 1) {\r\n      break;\r\n    }\r\n    // iterating over neighbours from back\r\n    for (const item of neighbor2) {\r\n      if (item[0] === end[0] && item[1] === end[1]) {\r\n        continue;\r\n      }\r\n\r\n      if (visited1[item[0]][item[1]] === 1) {\r\n        meetpoint2 = current2;\r\n        meetpoint1 = item;\r\n        ok = 1;\r\n        break;\r\n      }\r\n      if ( dist2[current2[0]][current2[1]] + 1< dist2[item[0]][item[1]]) {\r\n        dist2[item[0]][item[1]] = dist2[current2[0]][current2[1]] + 1;\r\n        par2[item[0]][item[1]] = current2;\r\n        backwardPQ.push([item,\r\n          dist2[item[0]][item[1]]] );\r\n      }\r\n    }\r\n    grid[current1[0]][current1[1]] = 2;\r\n    grid[current2[0]][current2[1]] = 6;\r\n    grid[start[0]][start[1]]=3;\r\n    grid[end[0]][end[1]]=4;\r\n    this.setState({grid});\r\n    if (ok === 1) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Retrieving the found path\r\n  let ptr = meetpoint1;\r\n  let ok1 = true;\r\n  while (ok1) {\r\n    this.state.path = [...this.state.path, ptr];\r\n    if (ptr === undefined) {\r\n      reached = false;\r\n      ok1 = false; break;\r\n    } else if (ptr[0] === start[0] && ptr[1] === start[1]) {\r\n      ok1 = false; break;\r\n    } else {\r\n      ptr = par1[ptr[0]][ptr[1]];\r\n    }\r\n  }\r\n  if (!reached) {\r\n    this.showModal(); // return not found\r\n    this.setState({visual: false});\r\n    return;\r\n  }\r\n  this.state.path = this.state.path.reverse();\r\n  ptr = meetpoint2;\r\n  let pth2= [];\r\n  ok = true;\r\n  while (ok) {\r\n    pth2 = [...pth2, ptr];\r\n    if (ptr === undefined) {\r\n      reached = false;\r\n      ok = false;\r\n    } else if (ptr[0] === end[0] && ptr[1] === end[1]) {\r\n      ok = false;\r\n    } else {\r\n      ptr = par2[ptr[0]][ptr[1]];\r\n    }\r\n  }\r\n  if (!reached) {\r\n    this.showModal(); // return not found\r\n    this.setState({visual: false});\r\n    return;\r\n  }\r\n\r\n  this.state.path = this.state.path.concat(pth2);\r\n  // console.log(this.state.path);\r\n  await this.pathdisplay(this.state.path);\r\n};\r\n","import PropTypes from \"prop-types\";\r\n/**\r\n *\r\n */\r\nclass Graph {\r\n  /**\r\n   *\r\n   * @param {array} grid\r\n   * @param {number} height\r\n   * @param {number} width\r\n   */\r\n  constructor(grid, height, width) {\r\n    this.adjacencyList = {};\r\n    this.allPairShortest = Array(height*width).\r\n        fill().map(() =>\r\n          Array(height*width).fill(1000000));\r\n    this.grid = grid;\r\n    this.map1 = new Map();\r\n    this.map2 = new Map();\r\n    this.height = height;\r\n    this.width = width;\r\n    let counter = 0;\r\n    for (let i = 0; i < this.height; i++) {\r\n      for (let j = 0; j < this.width; j++) {\r\n        this.map1[parseInt(counter, 10)] = [[i, j]];\r\n        this.map2[[i, j]] = counter;\r\n        counter++;\r\n      }\r\n    }\r\n\r\n    this.constructGraph();\r\n    this.floydWarshall();\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} vertex\r\n   */\r\n  addVertex(vertex) {\r\n    if (!this.adjacencyList[parseInt(vertex, 10)]) {\r\n      this.adjacencyList[parseInt(vertex, 10)] = [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} source\r\n   * @param {number} destination\r\n   */\r\n  addEdge(source, destination) {\r\n    if (!this.adjacencyList[parseInt(source, 10)]) {\r\n      this.addVertex(parseInt(source, 10));\r\n    }\r\n    if (!this.adjacencyList[parseInt(destination, 10)]) {\r\n      this.addVertex(parseInt(destination, 10));\r\n    }\r\n    this.adjacencyList[parseInt(source, 10)].push(parseInt(destination, 10));\r\n    this.adjacencyList[parseInt(destination, 10)].push(parseInt(source, 10));\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} i\r\n   * @param {number} j\r\n   * @return {boolean}\r\n   */\r\n  isNotWall(i, j) {\r\n    if (i < 0 || i >= this.height || j < 0 || j >= this.width ) {\r\n      return false;\r\n    } else {\r\n      return this.grid[parseInt(i, 10)][parseInt(j, 10)] !== 1;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructGraph() {\r\n    const directions = [[0, 1], [1, 0], [0, -1], [-1, 0]];\r\n    for (let i = 0; i < this.height; i++) {\r\n      for (let j = 0; j < this.width; j++) {\r\n        if (this.isNotWall(i, j)) {\r\n          for (const direction of directions) {\r\n            const neighbor = [i + direction[0], j + direction[1]];\r\n            if (this.isNotWall(neighbor[0], neighbor[1])) {\r\n              const x = this.map2[[i, j]];\r\n              const y = this.map2[[neighbor[0], neighbor[1]]];\r\n              this.addEdge(x, y);\r\n              this.allPairShortest[parseInt(x, 10)][parseInt(y, 10)] = 1;\r\n              this.allPairShortest[parseInt(y, 10)][parseInt(x, 10)] = 1;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *Floyd Warshal Algo to store distances betwenn all pairs of vertices\r\n   */\r\n  floydWarshall() {\r\n    for (let k = 0; k < this.height*this.width; k++) {\r\n      for (let i = 0; i < this.height*this.width; i++) {\r\n        for (let j = 0; j < this.height*this.width; j++) {\r\n          this.allPairShortest[parseInt(i, 10)][parseInt(j, 10)] =\r\n              Math.min(this.allPairShortest[parseInt(i, 10)][parseInt(j, 10)],\r\n                  this.allPairShortest[parseInt(i, 10)][parseInt(k, 10)] +\r\n                  this.allPairShortest[parseInt(k, 10)][parseInt(j, 10)]);\r\n          this.allPairShortest[parseInt(j, 10)][parseInt(i, 10)] =\r\n              this.allPairShortest[parseInt(i, 10)][parseInt(j, 10)];\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nGraph.propTypes = {\r\n  grid: PropTypes.array,\r\n};\r\nexport default Graph;\r\n\r\n","import React, {Component} from \"react\";\r\nimport Grid from \"./components/Grid\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {DFS} from \"./Algo/dfs\";\r\nimport {Dijkstra} from \"./Algo/Dijkstra\";\r\nimport {AStar} from \"./Algo/AStar\";\r\nimport {findOptimalVertex} from \"./Algo/TSP\";\r\nimport {aStarForTSP} from \"./Algo/TSP\";\r\nimport {TSP} from \"./Algo/TSP\";\r\nimport {BFS} from \"./Algo/BFS\";\r\nimport {BiBFS} from \"./Algo/BiBFS\";\r\nimport {BiAstar} from \"./Algo/BiAstar\";\r\nimport {BidirectionalDijkstra} from \"./Algo/BidirectionalDijkstra\";\r\nimport Graph from \"./Algo/Graph\";\r\n// This is the modal to display path not found\r\nconst D = ({handleClose, show}) => {\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        style={{\r\n          opacity: \"90%\",\r\n          backgroundColor: \"#000000\",\r\n          color: \"#fee440\",\r\n        }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Uh-Oh!!</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n                    PATH TO THE TARGET NOT FOUND!\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n//This is the path length modal, shown after the process\r\nconst PathModal = ({handleClose, show, pathlength}) => {\r\n  return (\r\n      <>\r\n        <Modal\r\n            show={show}\r\n            onHide={handleClose}\r\n            style={{\r\n              marginLeft:'0',\r\n              opacity:'70%',\r\n\r\n            }}\r\n        >\r\n          <Modal.Header closeButton>\r\n            Path length:  {pathlength}\r\n          </Modal.Header>\r\n         </Modal>\r\n      </>\r\n  );\r\n};\r\n/**\r\n * Class for our Application\r\n */\r\nclass App extends Component {\r\n  /**\r\n   *\r\n   * @param {props} props\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      height: 17, // height of the grid\r\n      width: 30, // width of the grid\r\n      start: [[10, 9]], // start position\r\n      end: [[10, 15]], // end position\r\n      grid: Array(20).fill().map(() => Array(20).fill(0)),\r\n      speed: 0.100, // speed for animation\r\n      pointer: [], // store the pointer for visualization\r\n      pointer2: [], // for bidirectional visualization\r\n      modalshow: false,\r\n      heuristics: Array(20).fill().map(() => Array(20).fill(0)),\r\n      reverseHeuristics: Array(20).fill().map(() => Array(20).fill(0)),\r\n      path: [],\r\n      graph: null,\r\n      changeSource: false,\r\n      changeDestination: false,\r\n      multipledestinations: false,\r\n      visual: false,\r\n      pathmodal:false,\r\n      pathlength: 0,\r\n      currentAlgo: \"Not Selected\",\r\n      bi: false, // boolean indicator for bidirectional algos\r\n    };\r\n    this.state.grid[this.state.start[0][0]][this.state.start[0][1]] = 3;\r\n    // special point : start point\r\n\r\n    this.state.grid[this.state.end[0][0]][this.state.end[0][1]] = 4;\r\n    // special point : end point\r\n\r\n    this.computeHeuristics();\r\n  }\r\n    dfs = DFS.bind(this);\r\n    bfs= BFS.bind(this);\r\n    dijkstra = Dijkstra.bind(this);\r\n    aStar = AStar.bind(this);\r\n    tsp = TSP.bind(this);\r\n    aStarForTSP = aStarForTSP.bind(this);\r\n    findOptimalVertex = findOptimalVertex.bind(this);\r\n    biBFS = BiBFS.bind(this);\r\n    biAstar = BiAstar.bind(this);\r\n    bidirectionalDijkstra = BidirectionalDijkstra.bind(this);\r\n\r\n    toggleSource=() => this.setState({changeSource: !this.state.changeSource});\r\n    toggleDestination = () => {\r\n        this.setState({changeDestination: !this.state.changeDestination});\r\n    }\r\n    changedSource=(i, j) => {\r\n      const grid = this.state.grid;\r\n      grid[this.state.start[0][0]][this.state.start[0][1]] = 0;\r\n      grid[parseInt(i, 10)][parseInt(j, 10)] = 3; // special point : end point\r\n      this.setState({\r\n        changeSource: !this.state.changeSource,\r\n        start: [[i, j]],\r\n        grid,\r\n      });\r\n    }\r\n    changedDestination = (i, j) => {\r\n      const grid = this.state.grid;\r\n      grid[parseInt(i, 10)][parseInt(j, 10)] = 4; // special point : end point\r\n      if (this.state.multipledestinations && this.state.changeDestination) {\r\n        this.setState({end: [...this.state.end, [i, j]], grid});\r\n        return;\r\n      } else {\r\n        grid[this.state.end[0][0]][this.state.end[0][1]] = 0;\r\n      }\r\n\r\n      this.setState({\r\n        changeDestination: !this.state.changeDestination,\r\n        end: [[i, j]],\r\n        grid,\r\n      });\r\n    }\r\n    multiDestination = () => {\r\n      this.setState({multipledestinations: !this.state.multipledestinations});\r\n    }\r\n    showModal = () => this.setState({modalshow: true});\r\n    hideModal = () => this.setState({modalshow: false});\r\n    hidePathModal = () => this.setState({pathmodal: false});\r\n    computeHeuristics= () => {\r\n      const heuristics = this.state.heuristics;\r\n      const start = this.state.start; const end = this.state.end;\r\n      const height = this.state.height; const width = this.state.width;\r\n      for (let i = 0; i < height; i++) {\r\n        for (let j = 0; j < width; j++) {\r\n          heuristics[parseInt(i, 10)][parseInt(j, 10)] =\r\n              Math.abs(end[0][0]-i) + Math.abs(end[0][1]-j);\r\n        }\r\n      }\r\n\r\n      const reverseHeuristics = this.state.reverseHeuristics;\r\n      for (let i = 0; i < height; i++) {\r\n        for (let j = 0; j < width; j++) {\r\n          reverseHeuristics[parseInt(i, 10)][parseInt(j, 10)] =\r\n              Math.abs(start[0][0]-i) + Math.abs(start[0][1]-j);\r\n        }\r\n      }\r\n\r\n      this.setState({heuristics, reverseHeuristics});\r\n    }\r\n    randomizeMatrix = () => {\r\n      this.clearGrid();\r\n      const newGrid = Array(this.state.height).fill().map(() =>\r\n        Array(this.state.width).fill(0));\r\n      for (let i = 0; i < this.state.height; i++) {\r\n        for (let j = 0; j < this.state.width; j++) {\r\n          newGrid[parseInt(i, 10)][parseInt(j, 10)] =\r\n              (Math.floor(Math.random() * 10) % 2);\r\n          // random values of zero or one to generate a random grid of\r\n          // walls amd empty cells\r\n        }\r\n      }\r\n      newGrid[this.state.start[0][0]][this.state.start[0][1]] = 3;\r\n      // special point : start\r\n      newGrid[this.state.end[0][0]][this.state.end[0][1]] = 4;\r\n      // special point : end\r\n      this.setState({grid: newGrid});\r\n    }\r\n    clearGrid = () => {\r\n      const newGrid = Array(this.state.height).fill().map(() =>\r\n        Array(this.state.width).fill(0));\r\n      newGrid[this.state.start[0][0]][this.state.start[0][1]] = 3;\r\n      // special point : start\r\n      newGrid[this.state.end[0][0]][this.state.end[0][1]] = 4;\r\n      // special point : end\r\n      this.setState({grid: newGrid, pointer: [], pointer2: []});\r\n    }\r\n    changeState = (x, y) => {\r\n      if (this.state.grid[parseInt(x, 10)][parseInt(y, 10)] === 3) {\r\n        return;\r\n      } // check if the current point is a special point (start or end)\r\n      const grid = this.state.grid;\r\n      if (grid[parseInt(x, 10)][parseInt(y, 10)] === 0 ||\r\n          grid[parseInt(x, 10)][parseInt(y, 10)] === 2) {\r\n        // if it is a visited cell or empty , make it a wall\r\n        grid[parseInt(x, 10)][parseInt(y, 10)] = 1;\r\n      } else { // convert a wall to empty cell\r\n        grid[parseInt(x, 10)][parseInt(y, 10)] = 0;\r\n      }\r\n      grid[this.state.start[0][0]][this.state.start[0][1]] = 3;\r\n      grid[this.state.end[0][0]][this.state.end[0][1]] = 4;\r\n      this.setState({grid});\r\n    }\r\n    changeSpeed = (newSpeed) => this.setState({speed: newSpeed});\r\n    selectAlgo = (name) => this.setState({currentAlgo: name});\r\n    visualize = async () => {\r\n      if (this.state.currentAlgo === \"Not Selected\") {\r\n        return;\r\n      }\r\n      const pointer = this.state.pointer;\r\n      pointer[0] = this.state.start[0][0];\r\n      pointer[1] = this.state.start[0][1];\r\n      this.setState({pointer, visual: true});\r\n\r\n      if (this.state.start[0] === this.state.end[0][0] &&\r\n          this.state.start[1] === this.state.end[0][1]) {\r\n        return;\r\n      }\r\n\r\n      if (this.state.start[0][0] === this.state.end[0][0] &&\r\n          this.state.start[0][1] === this.state.end[0][1]) {\r\n        return;\r\n      } else if (this.state.currentAlgo === \"DFS\") {\r\n        await this.dfs();\r\n      } else if (this.state.currentAlgo === \"Dijkstra\") {\r\n        await this.dijkstra();\r\n      } else if (this.state.currentAlgo === \"BFS\") {\r\n        await this.bfs();\r\n      } else if (this.state.currentAlgo === \"biDijkstra\") {\r\n        await this.bidirectionalDijkstra();\r\n      } else if (this.state.currentAlgo === \"Best-FS\") {\r\n        await this.aStar(0, 1);\r\n      } else if (this.state.currentAlgo === \"A*\") {\r\n        await this.aStar(1, 1);\r\n      } else if (this.state.currentAlgo === \"Weighted-AStar\") {\r\n        await this.aStar(1, 10);\r\n      } else if (this.state.currentAlgo === \"TSP\") {\r\n        this.state.graph =\r\n            new Graph(this.state.grid, this.state.height, this.state.width);\r\n        await this.tsp();\r\n      } else if (this.state.currentAlgo === \"biBFS\") {\r\n        await this.biBFS();\r\n      } else if (this.state.currentAlgo === \"BiAstar\") {\r\n        await this.biAstar();\r\n      }\r\n    }\r\n    pathdisplay = async (path) => {\r\n      const grid = this.state.grid;\r\n      console.log(this.state.path);\r\n      for (let i = 1; i < path.length; i++) {\r\n        grid[path[parseInt(i, 10)][0]][path[parseInt(i, 10)][1]] = 5;\r\n        await new Promise((done) => setTimeout(() => done(), this.state.speed));\r\n        this.setState({grid});\r\n      }\r\n\r\n       grid[this.state.end[0][0]][this.state.end[0][1]] = 4;\r\n       grid[this.state.start[0][0]][this.state.start[0][1]] = 3;\r\n\r\n      await new Promise((done) => setTimeout(() => done(), this.state.speed));\r\n      this.setState({grid, visual: false,\r\n        pathlength: path.length,\r\n        pathmodal:true,\r\n        bi: false, pointer: [], pointer2: []});\r\n    }\r\n    clearPath = () => {\r\n      const g = this.state.grid;\r\n      for (let i = 0; i < this.state.height; i++) {\r\n        for (let j = 0; j < this.state.width; j++) {\r\n          if (g[parseInt(i, 10)][parseInt(j, 10)] === 5) {\r\n            g[parseInt(i, 10)][parseInt(j, 10)] = 2;\r\n          }\r\n        }\r\n      }\r\n      this.setState({path: [], grid: g});\r\n    }\r\n    render() {\r\n      return (\r\n        <div>\r\n          <div id=\"navigation\">\r\n            <Navbar randomize={this.randomizeMatrix}\r\n              clearWalls={this.clearGrid}\r\n              newSpeed={this.changeSpeed}\r\n              multiDestination={this.multiDestination}\r\n              handle={this.selectAlgo}\r\n              selectedAlgo={this.currentAlgo}\r\n              visualize={this.visualize}\r\n              clearPath = {this.clearPath}\r\n              multipledestinations = {this.state.multipledestinations}\r\n              visual={this.state.visual}\r\n              toggleSource= {this.toggleSource}\r\n              toggleDestination=\r\n                {this.toggleDestination}/>\r\n          </div>\r\n          <div id=\"Board\">\r\n            <Grid start={this.state.start} end={this.state.end}\r\n              height={this.state.height}\r\n              multipledestinations = {this.state.multipledestinations}\r\n              bi={this.state.bi}\r\n              width={this.state.width}\r\n              grid={this.state.grid}\r\n              changeState={this.changeState}\r\n              changesourcefunc={this.changedSource}\r\n              changedestfunc = {this.changedDestination}\r\n              pointer={this.state.pointer}\r\n              pointer2={this.state.pointer2}\r\n              changeSource = {this.state.changeSource}\r\n              changeDestination = {this.state.changeDestination} />\r\n          </div>\r\n          <D show={this.state.modalshow} handleClose={this.hideModal} />\r\n          <PathModal show={this.state.pathmodal} handleClose={this.hidePathModal} pathlength={this.state.pathlength} />\r\n\r\n        </div>\r\n      );\r\n    }\r\n}\r\nexport default App;\r\n","import React, {Component} from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport BackgroundSlider from \"react-background-slider\";\r\nimport mars1 from \"../media/mars1.jpg\";\r\nimport mars2 from \"../media/mars2.jpg\";\r\nimport mars3 from \"../media/mars3.jpg\";\r\nimport mars4 from \"../media/mars4.png\";\r\nimport mars5 from \"../media/mars5.jpg\";\r\nimport mars6 from \"../media/mars6.jpg\";\r\nimport mars7 from \"../media/mars7.jpg\";\r\nimport mars8 from \"../media/mars8.jpg\";\r\nimport mars9 from \"../media/mars9.jpg\";\r\n\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Background from \"./LANDING.png\";\r\n\r\n/**\r\n * Front Landing Page\r\n */\r\nclass Welcome extends React.Component {\r\n  /**\r\n   *\r\n   * @param {props} props\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isChecked1: false,\r\n      isChecked2: false,\r\n      userAnswer: null,\r\n    };\r\n  }\r\n  toggleChange = (option) => {\r\n    if (option === 1) {\r\n      this.setState({isChecked1: true, isChecked2: false, userAnswer: \"True\"});\r\n    } else {\r\n      this.setState({isChecked1: false, isChecked2: true, userAnswer: \"False\"});\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          show={this.props.show}\r\n          onHide={this.props.handleClose}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          style={{\r\n            backgroundColor: \"#3423ae 80%\",\r\n          }}\r\n\r\n        >\r\n          <Modal.Header closeButton style={{\r\n            backgroundColor: \"#89daff\",\r\n            opacity: \"100%\",\r\n          }}>\r\n            <Modal.Title>Get Aboard!</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{\r\n            backgroundColor: \"#89daff\",\r\n            opacity: \"100%\",\r\n          }}>\r\n            <div><i>Answer this to move ahead!</i></div>\r\n            <div>{this.props.question}</div>\r\n            <div>\r\n              <label>\r\n                <input type=\"checkbox\"\r\n                  checked={this.state.isChecked1}\r\n                  onChange={() => this.toggleChange(1)}\r\n                />\r\n                  True\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <label>\r\n                <input type=\"checkbox\"\r\n                  checked={this.state.isChecked2}\r\n                  onChange={() => this.toggleChange(2)}\r\n                />\r\n                  False\r\n              </label>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer\r\n            style={{\r\n              backgroundColor: \"#89daff\",\r\n              opacity: \"100%\",\r\n            }}>\r\n            <Button variant=\"danger\" onClick={this.props.handleClose} style={{\r\n              backgroundColor: \"#ff0000\",\r\n            }}>\r\n                Try Later\r\n            </Button>\r\n            <Button variant=\"primary\" style={{\r\n              backgroundColor: \"#00ff00\",\r\n            }}\r\n            onClick={() => this.props.onSubmit(this.state.userAnswer)}>\r\n                LETS GO!\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Parse the question using get request\r\n * @param {string} theUrl\r\n * @return {string}\r\n */\r\nfunction httpGet(theUrl) {\r\n  const xmlHttp = new XMLHttpRequest();\r\n  xmlHttp.open( \"GET\", theUrl, false ); // false for synchronous request\r\n  xmlHttp.send( null );\r\n  return xmlHttp.responseText;\r\n}\r\n\r\n/**\r\n * Stores properties related to user question and page redirection\r\n */\r\nclass Home extends Component {\r\n  state = {\r\n    show: false,\r\n    redirect: null,\r\n    question: null,\r\n    answer: null,\r\n  };\r\n\r\n  /**\r\n   * Get questions from API before page loads\r\n   * @return {Promise<void>}\r\n   */\r\n  async componentDidMount() {\r\n    try {\r\n      let res = httpGet(\"https://opentdb.com/api.php?amount=1&category=18&type=boolean\");\r\n      res = JSON.parse(res);\r\n      res = res[\"results\"][0];\r\n      res[\"question\"] = res[\"question\"].replace(/&quot;/gi, \"\\\"\");\r\n      res[\"question\"] = res[\"question\"].replace(/&#039;/gi, \"/'\");\r\n      this.setState({question: res[\"question\"], answer: res[\"correct_answer\"]});\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Changes state when user clicks submit\r\n   * @param {anyObject }option\r\n   */\r\n  onSubmit(option) {\r\n    if (option === this.state.answer) {\r\n      this.setState({redirect: \"/mars-colonization-project/App\"});\r\n     } else {\r\n      alert(\"Wrong Option Chosen\");\r\n    }\r\n  }\r\n  handleShow = () => {\r\n    this.setState({show: true});\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({show: false});\r\n  };\r\n\r\n  /**\r\n   * renders the home screen\r\n   * @return {*}\r\n   */\r\n  render() {\r\n    if (this.state.redirect !== null) {\r\n      return <Redirect to='https://simran-sahni.github.io/mars-colonization-project/App'/>;\r\n    }\r\n    return (\r\n\r\n      <div id = \"home\"\r\n        style={{background:\r\n                 \"url(\" + {Background} + \")\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        backgroundPosition: \"center\",\r\n        backgroundSize: \"cover\",\r\n        backgroundRepeat: \"no-repeat\"}}>\r\n        <div id=\"MissionTitle\"\r\n          className=\"mb-4 p-4\"\r\n          style={{backgroundColor: \"#e5e5e5\",\r\n            opacity: \"70%\",\r\n            borderRadius: \"25%\",\r\n            float: \"right\",\r\n            width: \"25%\",\r\n            height: \"25%\",\r\n            fontSize: \"2em\",\r\n            marginTop: \"35px\"}}>\r\n          <p><b>&nbsp;&nbsp;&nbsp;&nbsp;MISSION</b></p>\r\n          <p><b> COLONIZE MARS! </b></p>\r\n        </div>\r\n\r\n\r\n        <Button variant=\"primary\" size=\"lg\" onClick={this.handleShow} style={{\r\n          backgroundColor: \"#283618\",\r\n          color: \"#fefae0\",\r\n          position: \"relative\",\r\n          margin: \"20%\",\r\n          marginLeft: \"38%\",\r\n        }}>\r\n          <strong>LAUNCH TO MARS</strong>\r\n        </Button>\r\n        <Welcome question = {this.state.question}\r\n          answer = {this.state.answer}\r\n          handleClose={this.handleClose}\r\n          show={this.state.show}\r\n          handleShow={this.handleShow}\r\n          onSubmit={this.onSubmit.bind(this)}/>\r\n        <BackgroundSlider\r\n          images={[mars7, mars1, mars2, mars5, mars7,\r\n            mars3, mars4, mars8, mars9, mars6]}\r\n          duration={3}\r\n          transition={0}/>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport App from \"./App\";\r\nimport Home from \"./components/Home\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\n\r\n/**\r\n *\r\n * @return {*}\r\n * @constructor\r\n */\r\nexport default function Root() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n\r\n        <Route exact path=\"/mars-colonization-project\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/mars-colonization-project/App\">\r\n          <App />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n              \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then((registration) => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === \"installed\") {\r\n              if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n                console.log(\r\n                    \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\r\n                );\r\n\r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n                console.log(\"Content is cached for offline use.\");\r\n\r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error during service worker registration:\", error);\r\n      });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: {\"Service-Worker\": \"script\"},\r\n  })\r\n      .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get(\"content-type\");\r\n        if (\r\n          response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n        ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n        // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n            \"No internet connection found. App is running in offline mode.\",\r\n        );\r\n      });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n        .then((registration) => {\r\n          registration.unregister();\r\n        })\r\n        .catch((error) => {\r\n          console.error(error.message);\r\n        });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Root from \"./Root\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <Root />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}