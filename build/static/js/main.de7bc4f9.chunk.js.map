{"version":3,"sources":["media/mars7.jpg","media/mars-rover.svg","media/mars1.jpg","media/mars2.jpg","media/mars3.jpg","media/mars4.png","media/mars5.jpg","media/mars6.jpg","media/mars8.jpg","media/mars9.jpg","components/LANDING.png","components/Cell.js","components/Grid.js","components/Navbar.js","Algo/dfs.js","Algo/customPriorityQueue.js","Algo/Dijkstra.js","Algo/Utility.js","Algo/AStar.js","Algo/TSP.js","Algo/BFS.js","Algo/IDAStar.js","Algo/BiBFS.js","Algo/BiAstar.js","Algo/BidirectionalDijkstra.js","Algo/Graph.js","App.js","components/Home.js","Root.js","serviceWorker.js","index.js"],"names":["module","exports","currentPointer","props","i","j","key","style","width","height","border","backgroundColor","WebkitUserSelect","onClick","changeSource","toggleSource","changeState","src","rover","alt","finalShortestPath","changesourcefunc","changeDestination","changedestfunc","startPoint","endPoint","wall","onTouchStart","e","window","event","buttons","onMouseEnter","visited","visited2","empty","multipledestinations","Grid","gridList","rowList","bi","pointer","pointer2","push","grid","className","map","object","index","Navbar","state","selectedAlgo","currentAlgo","checkedA","this","document","getElementById","innerHTML","multiDestination","editButtons","setState","algo","target","getAttribute","toString","setString","handle","id","href","FormGroup","FormControlLabel","control","Switch","color","checked","onChange","hc","label","disabled","visual","toggleDestination","type","fontWeight","visualize","data-toggle","onMouseDown","handleChange","randomize","clearWalls","clearPath","newSpeed","React","Component","DFS","a","flag","start","end","speed","Array","fill","stack","ok","path","length","current","pop","Promise","done","setTimeout","list","concat","showModal","pathdisplay","parent","left","right","PriorityQueue","comparator","b","_heap","_comparator","size","values","forEach","value","_siftUp","poppedValue","peek","bottom","_swap","_siftDown","replacedValue","node","_greater","maxChild","Dijkstra","queue","dist","par","ptr","reverse","directions","isFeasable","isFeasable2","neighbors","answer","direction","neighbor","biNeighbors","AStar","w1","w2","computeHeuristics","pq","heuristics","dp","isEmpty","item","TSP","unvisited","Set","add","now","totalpath","togo","findOptimalVertex","delete","aStarForTSP","newpath","AppState","Math","abs","source","sourceMapped","graph","map2","destinationMapped","allPairShortest","BFS","shift","console","log","IDAstar","root","bound","t","search","g","f","min","neighborr","isGoodCell","BiBFS","queue1","queue2","par1","par2","mySet","revcurrent","flag1","flag2","list1","list2","dir","neighbour1","neighbour2","breakpoint","pth2","BiAstar","reverseHeuristics","visited1","forwardPQ","backwardPQ","forwardDP","backwardDP","current1","current2","meetpoint2","meetpoint1","BidirectionalDijkstra","undefined","dist1","dist2","neighbor1","neighbor2","Graph","adjacencyList","map1","Map","counter","constructGraph","floydWarshall","vertex","destination","addVertex","isNotWall","x","y","addEdge","k","propTypes","PropTypes","array","D","handleClose","show","Modal","onHide","backdrop","keyboard","opacity","Header","closeButton","Title","Body","Footer","Button","variant","App","modalshow","bind","changedSource","changedDestination","hideModal","randomizeMatrix","clearGrid","newGrid","floor","random","changeSpeed","selectAlgo","name","Welcome","toggleChange","option","isChecked1","isChecked2","userAnswer","question","onSubmit","httpGet","theUrl","xmlHttp","XMLHttpRequest","open","send","responseText","Home","redirect","handleShow","res","JSON","parse","replace","alert","to","background","Background","backgroundPosition","backgroundSize","backgroundRepeat","borderRadius","float","fontSize","marginTop","position","margin","marginLeft","images","mars7","mars1","mars2","mars5","mars3","mars4","mars8","mars9","mars6","duration","transition","Root","exact","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.de7bc4f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mars7.f9354f0a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars-rover.59452d47.svg\";","module.exports = __webpack_public_path__ + \"static/media/mars1.7a8733c3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars2.7bf85db4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars3.6a21f55b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars4.17d38c2f.png\";","module.exports = __webpack_public_path__ + \"static/media/mars5.548733ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars6.97edad93.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars8.474640cc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars9.4aee5d3f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/LANDING.ee7b2b54.png\";","import rover from '../media/mars-rover.svg';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nexport const currentPointer = function(props, i, j) {\r\n  return (<div\r\n    key={i + j}\r\n    style={{width: '35px', height: '35px', border: '1.5px solid black',\r\n      backgroundColor: '#69fff1', WebkitUserSelect: 'none',\r\n    }}\r\n    onClick={() => {\r\n      if (props.changeSource)props.toggleSource(i, j);\r\n      else props.changeState(i, j);\r\n    }}\r\n  >\r\n    <img src={rover} alt=\"start\" style={{width: '25px', height: '25px'}}/>\r\n  </div>);\r\n};\r\n\r\nexport const finalShortestPath = function(props, i, j) {\r\n  return ( <div\r\n    key={i + j}\r\n    style={{width: '35px', height: '35px', border: '1.5px solid black',\r\n      backgroundColor: '#fee440', WebkitUserSelect: 'none',\r\n    }}\r\n    onClick={() => {\r\n      if (props.changeSource) props.changesourcefunc(i, j);\r\n      else if (props.changeDestination) props.changedestfunc(i, j);\r\n      else props.changeState(i, j);\r\n    }}\r\n  >\r\n  </div>);\r\n};\r\nexport const startPoint = function(props, i, j) {\r\n  return (\r\n    <div\r\n      key={i + j}\r\n      style={{width: '35px', height: '35px', border: '1.5px solid black',\r\n        backgroundColor: '#71b340', WebkitUserSelect: 'none',\r\n      }}\r\n      onClick={() => {\r\n        if (props.changeSource) props.changesourcefunc(i, j);\r\n        else if (props.changeDestination) props.changedestfunc(i, j);\r\n        else props.changeState(i, j);\r\n      }\r\n      }\r\n    >\r\n    </div>);\r\n};\r\nexport const endPoint = function(props, i, j) {\r\n  return (\r\n    <div\r\n      key={i + j}\r\n      style={{\r\n        width: '35px', height: '35px', border: '1.5px solid black',\r\n        backgroundColor: '#ee0000', WebkitUserSelect: 'none',\r\n      }}\r\n      onClick={() => {\r\n        if (props.changeSource) props.changesourcefunc(i, j);\r\n        else if (props.changeDestination) props.changedestfunc(i, j);\r\n        else {\r\n          props.changeState(i, j);\r\n        }\r\n      }\r\n      }\r\n\r\n    >\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const wall = function(props, i, j) {\r\n  return (\r\n    <div\r\n      key={i + j}\r\n      style={{\r\n        width: '35px', height: '35px', border: '1.5px solid black',\r\n        backgroundColor: '#540b0e', WebkitUserSelect: 'none',\r\n      }}\r\n      onClick={() => {\r\n        if (props.changeSource) props.changesourcefunc(i, j);\r\n        else if (props.changeDestination) props.changedestfunc(i, j);\r\n        else props.changeState(i, j);\r\n      }}\r\n      onTouchStart={(e) => {\r\n        if (window.event.buttons === 1) props.changeState(i, j);\r\n      }\r\n      }\r\n      onMouseEnter={(e) => {\r\n        if (window.event.buttons === 1) props.changeState(i, j);\r\n      }\r\n      }\r\n    >\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const visited = function(props, i, j) {\r\n  return (\r\n    <div\r\n      key={i + j}\r\n      style={{\r\n        width: '35px', height: '35px', border: '1.5px solid black',\r\n        backgroundColor: '#e09891', WebkitUserSelect: 'none',\r\n      }}\r\n      onClick={() => {\r\n        if (props.changeSource) props.changesourcefunc(i, j);\r\n        else if (props.changeDestination) props.changedestfunc(i, j);\r\n        else props.changeState(i, j);\r\n      }}\r\n    >\r\n    </div>\r\n  );\r\n};\r\nexport const visited2 = function(props, i, j) {\r\n  return (\r\n    <div\r\n      key={i + j}\r\n      style={{\r\n        width: '35px', height: '35px', border: '1.5px solid black',\r\n        backgroundColor: '#666666', WebkitUserSelect: 'none',\r\n      }}\r\n      onClick={() => {\r\n        if (props.changeSource) props.changesourcefunc(i, j);\r\n        else if (props.changeDestination) props.changedestfunc(i, j);\r\n        else props.changeState(i, j);\r\n      }}\r\n    >\r\n    </div>\r\n  );\r\n};\r\nexport const empty = function(props, i, j) {\r\n  return ( <div\r\n    key={i + j}\r\n    style={{\r\n      width: '35px', height: '35px', border: '1.5px solid black',\r\n      WebkitUserSelect: 'none',\r\n    }}\r\n    onClick={() => {\r\n      if (props.changeSource) props.changesourcefunc(i, j);\r\n      else if ((props.changeDestination) || (props.multipledestinations)) props.changedestfunc(i, j);\r\n      else props.changeState(i, j);\r\n    }}\r\n    onTouchStart={(e) => {\r\n      if (window.event.buttons === 1)props.changeState(i, j);\r\n    }\r\n    }\r\n    onMouseEnter={(e) => {\r\n      if (window.event.buttons === 1)props.changeState(i, j);\r\n    }\r\n    }\r\n  >\r\n  </div>);\r\n};\r\n\r\nempty.propTypes = {\r\n  changeSource: PropTypes.bool,\r\n  changeDestination: PropTypes.bool,\r\n  changesourcefunc: PropTypes.func,\r\n  changedestfunc: PropTypes.func,\r\n  changeState: PropTypes.func,\r\n  multipledestinations: PropTypes.bool,\r\n\r\n};\r\n\r\nvisited.propTypes = {\r\n  changeSource: PropTypes.bool,\r\n  changeDestination: PropTypes.bool,\r\n  changesourcefunc: PropTypes.func,\r\n  changedestfunc: PropTypes.func,\r\n  changeState: PropTypes.func,\r\n\r\n};\r\nvisited2.propTypes = {\r\n  changeSource: PropTypes.bool,\r\n  changeDestination: PropTypes.bool,\r\n  changesourcefunc: PropTypes.func,\r\n  changedestfunc: PropTypes.func,\r\n  changeState: PropTypes.func,\r\n\r\n};\r\n\r\nwall.propTypes ={\r\n  changeSoure: PropTypes.bool,\r\n  changeDestination: PropTypes.bool,\r\n  changesourcefun: PropTypes.func,\r\n  changedestfunc: PropTypes.func,\r\n  changeState: PropTypes.func,\r\n};\r\n\r\nfinalShortestPath.propTypes = {\r\n  changeSoure: PropTypes.bool,\r\n  changeDestination: PropTypes.bool,\r\n  changesourcefunc: PropTypes.func,\r\n  changedestfunc: PropTypes.func,\r\n  changeState: PropTypes.func,\r\n};\r\n\r\n\r\nstartPoint.propTypes = {\r\n  changeSoure: PropTypes.bool,\r\n  changeDestination: PropTypes.bool,\r\n  changesourcefunc: PropTypes.func,\r\n  changedestfunc: PropTypes.func,\r\n  changeState: PropTypes.func,\r\n};\r\n\r\nendPoint.propTypes = {\r\n  changeSoure: PropTypes.bool,\r\n  changeDestination: PropTypes.bool,\r\n  changesourcefunc: PropTypes.func,\r\n  changedestfunc: PropTypes.func,\r\n  changeState: PropTypes.func,\r\n};\r\n\r\ncurrentPointer.propTypes = {\r\n  changeSource: PropTypes.bool,\r\n  toggleSource: PropTypes.func,\r\n  changeState: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {currentPointer, wall, finalShortestPath, startPoint, endPoint, visited, visited2, empty} from './Cell';\r\n\r\n/**\r\n *\r\n * @param {props} props\r\n * @return {*}\r\n * @constructor\r\n */\r\nfunction Grid(props) {\r\n  const height = props.height; const width = props.width;\r\n  const gridList = [];\r\n\r\n  /* status of grid states for reference\r\n      0: normal cell\r\n      1:wall\r\n      2:visited during search\r\n      3:Special Points : start\r\n      4:Special Points : end\r\n      5:Cells in Final Shortest Path\r\n      */\r\n\r\n  for (let i = 0; i < height; i++) {\r\n    const rowList = [];\r\n    for (let j = 0; j < width; j++) {\r\n      if (!props.bi && props.pointer && i === props.pointer[0] && j === props.pointer[1])rowList.push(currentPointer(props, i, j));\r\n      else if (!props.bi && props.pointer2 && i === props.pointer2[0] && j === props.pointer2[1])rowList.push(currentPointer(props, i, j));\r\n      else if (props.grid[i][j] === 1) rowList.push(wall(props, i, j));\r\n      else if (props.grid[i][j] === 2) rowList.push(visited(props, i, j));\r\n      else if (props.grid[i][j] === 3)rowList.push(startPoint(props, i, j));\r\n      else if (props.grid[i][j] === 4) rowList.push(endPoint(i, j));\r\n      else if (props.grid[i][j] === 5) rowList.push(finalShortestPath(props, i, j));\r\n      else if (props.grid[i][j] === 6) rowList.push(visited2(props, i, j));\r\n      else rowList.push(empty(props, i, j));\r\n    }\r\n    gridList.push(rowList);\r\n  }\r\n  return (\r\n    <div className=\"p-4\">\r\n      {gridList.map((object, index) => {\r\n        return (\r\n          <div className=\"row justify-content-center flex-nowrap\" key = {index}>\r\n            {object}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\nGrid.propTypes = {\r\n  height: PropTypes.number,\r\n  width: PropTypes.number,\r\n  grid: PropTypes.array,\r\n  changeState: PropTypes.func,\r\n  start: PropTypes.array,\r\n  end: PropTypes.array,\r\n  changeSource: PropTypes.bool,\r\n  changeDestination: PropTypes.bool,\r\n  changesourcefunc: PropTypes.func,\r\n  changedestfunc: PropTypes.func,\r\n\r\n};\r\n\r\nexport default Grid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n/**\r\n *\r\n * @param {props} props\r\n * @return {*}\r\n * @constructor\r\n */\r\nclass Navbar extends React.Component {\r\n  /**\r\n   *@param {props} props\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      selectedAlgo: props.currentAlgo,\r\n      checkedA: false,\r\n\r\n\r\n    };\r\n  }\r\n\r\n  hc() {\r\n    if (!this.state.checkedA) {\r\n      this.editButtons();\r\n    } else {\r\n      document.getElementById('chngDestBtn').innerHTML = '<button class=\"btn\" type=\"button\"  onClick={this.props.toggleDestination}  style=\"background-color:#6a040f ;  color:peachpuff\">'+ 'Change Destination'+'</ button>';\r\n      this.props.multiDestination();\r\n    }\r\n    this.setState({checkedA: !this.state.checkedA});\r\n  }\r\n\r\n\r\n  editButtons() {\r\n    document.getElementById('chngDestBtn').innerHTML = '<button class=\"btn\" type=\"button\" style=\"background-color:#6a040f;  color:peachpuff\">'+ 'Add Destination'+'</ button>';\r\n    this.props.multiDestination();\r\n  }\r\n  /**\r\n   *\r\n   * @param {event} event\r\n   */\r\n\r\n  handleChange(event) {\r\n    const algo = (event.target.getAttribute('id')).toString();\r\n    const setString = 'Visualize  ' + algo + '!';\r\n    document.getElementById('visualizebtn').innerHTML =\r\n        // eslint-disable-next-line max-len\r\n        '<button id=\"visualizebtn\" class=\"btn\" type=\"button\" style=\"font-weight:bold\">'+ setString+'</ button>';\r\n\r\n    this.props.handle(algo);\r\n    this.setState({selectedAlgo: algo});\r\n  }\r\n  /**\r\n   *\r\n   * @return {*}\r\n   */\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand-lg\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"navbar-header\">\r\n              <a id=\"refreshButton\" className=\"navbar-brand\" href=\"/mars-colonization-project/App\">\r\n                {/* eslint-disable-next-line max-len */}\r\n                  Conquer Mars! <i className=\"fa fa-rocket\"/> <span className=\"icon\" /></a\r\n              >\r\n            </div>\r\n            <ul className=\"navbar-nav\">\r\n              <FormGroup>\r\n                <FormControlLabel\r\n                  control={<Switch color = \"primary\" checked={this.state.checkedA} onChange={()=>this.hc()} />}\r\n                  label=\"Multiple Destinations\" style={{color: 'peachpuff'}}\r\n\r\n                />\r\n              </FormGroup>\r\n              <li className=\"nav-item\">\r\n\r\n                <button onClick={this.props.toggleSource} className=\"btn\"\r\n                  style={{\r\n                    backgroundColor: '#71b340',\r\n                  }}\r\n                  disabled={this.props.visual}\r\n                >\r\n                    Change Source\r\n                </button>\r\n              </li>\r\n              <li className=\"nav-item\" id=\"chngDestBtn\">\r\n\r\n                <button onClick={this.props.toggleDestination} className=\"btn\"\r\n\r\n                  style={{\r\n                    backgroundColor: '#6a040f',\r\n                    color: 'peachpuff',\r\n                  }}\r\n                  disabled={this.props.visual}\r\n                >\r\n                    Change Destination\r\n                </button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n\r\n                <button\r\n                  id=\"visualizebtn\"\r\n                  className=\"btn\"\r\n                  type=\"button\"\r\n                  style={{fontWeight: 'bolder'}}\r\n                  onClick={this.props.visualize}\r\n                  disabled={this.props.visual}\r\n                >\r\n                    Visualize\r\n                </button>\r\n              </li>\r\n              <li className=\"nav-item dropdown\" id = \"AlgosList\">\r\n                <button\r\n                  className=\"btn dropdown-toggle\"\r\n                  type=\"button\"\r\n                  data-toggle=\"dropdown\"\r\n                  disabled={this.props.visual}\r\n                >\r\n                    Algorithms <span className=\"caret\"/>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                  <li >\r\n                    <button id=\"Dijkstra\" disabled={this.props.multipledestinations}\r\n                      onMouseDown={(event) => this.handleChange(event)}>\r\n                        Dijkstra Algorithm</button>\r\n                  </li>\r\n                  <li >\r\n                    <button id=\"A*\" disabled={this.props.multipledestinations}\r\n                      onClick={(event) => this.handleChange(event)}>\r\n                        A* Search </button>\r\n                  </li>\r\n                  <li >\r\n                    <button id=\"DFS\"\r\n                      disabled={this.props.multipledestinations}\r\n                      onClick={(event) => this.handleChange(event)}>\r\n                        DFS </button>\r\n                  </li>\r\n                  <li >\r\n                    <button id=\"BFS\" disabled={this.props.multipledestinations}\r\n                      onMouseDown={(event) => this.handleChange(event)}>\r\n                        BFS</button>\r\n                  </li>\r\n                  <li >\r\n                    <button id=\"biDijkstra\" disabled={this.props.multipledestinations}\r\n                      onMouseDown={(event) => this.handleChange(event)}>\r\n                        Bidirectional Dijkstra</button>\r\n                  </li>\r\n                  <li >\r\n                    <button id=\"biBFS\" disabled={this.props.multipledestinations}\r\n                      onMouseDown={(event) => this.handleChange(event)}>\r\n                        Bidirectional BFS </button>\r\n                  </li>\r\n                  <li>\r\n                    <button id=\"Best-FS\" disabled={this.props.multipledestinations}\r\n                      onMouseDown={(event) => this.handleChange(event)}>\r\n                        Greedy best-first search </button>\r\n                  </li>\r\n                  <li >\r\n                    <button id=\"TSP\"\r\n                      onMouseDown={(event) => this.handleChange(event)}>\r\n                        Travelling Salesman </button>\r\n                  </li>\r\n                  <li >\r\n                    <button id=\"IDAStar\" disabled={this.props.multipledestinations}\r\n                      onMouseDown={(event) => this.handleChange(event)}>\r\n                        Iterative Deepening A* </button>\r\n                  </li>\r\n                  <li >\r\n                    <button id=\"Weighted-AStar\" disabled={this.props.multipledestinations}\r\n                      onMouseDown={(event) => this.handleChange(event)}>\r\n                        Weighted A* </button>\r\n                  </li>\r\n                  <li >\r\n                    <button\r\n                      id=\"BiAstar\"\r\n                      disabled={this.props.multipledestinations}\r\n                      onMouseDown={(event) => this.handleChange(event)}>\r\n                        Bidirectional A* </button>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <button onClick={this.props.randomize}\r\n                  className=\"btn\"\r\n                  disabled={this.props.visual}>\r\n                    Randomize\r\n                </button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <button onClick = {this.props.clearWalls}\r\n                  className=\"btn\" disabled={this.props.visual}>\r\n                    Clear Board\r\n                </button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <button onClick = {this.props.clearPath}\r\n                  className=\"btn\"\r\n                  disabled={this.props.visual}>\r\n                    Clear Path\r\n                </button>\r\n              </li>\r\n              <li className=\"nav-item dropdown\">\r\n                <button\r\n                  className=\"btn dropdown-toggle\"\r\n                  type=\"button\"\r\n                  data-toggle=\"dropdown\"\r\n                  disabled={this.props.visual}\r\n                >\r\n                    Speed <span className=\"caret\"/>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                  <li onClick={()=> this.props.newSpeed(1)}>Fast\r\n                  </li>\r\n                  <li onClick={() => this.props.newSpeed(350)}>Medium\r\n                  </li>\r\n                  <li onClick={() => this.props.newSpeed(750)}>Slow\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n        <div className=\"d-flex flex-row flex-wrap m-2 justify-content-around\"\r\n          id=\"Legend\">\r\n          <div className=\"d-flex p-2\">Start:\r\n            <div\r\n\r\n              style={{\r\n                width: '20px',\r\n                height: '20px',\r\n                backgroundColor: '#71b340',\r\n                WebkitUserSelect: 'none',\r\n              }}\r\n\r\n            >\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex p-2\">End:\r\n            <div\r\n\r\n              style={{\r\n                width: '20px',\r\n                height: '20px',\r\n                backgroundColor: '#ee0000',\r\n                WebkitUserSelect: 'none',\r\n              }}\r\n            >\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex p-2\">Wall:\r\n            <div\r\n              style={{\r\n                width: '20px',\r\n                height: '20px',\r\n                backgroundColor: '#540b0e',\r\n                WebkitUserSelect: 'none',\r\n              }}\r\n            >\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex p-2\">Visited Node:\r\n            <div\r\n              style={{\r\n                width: '20px',\r\n                height: '20px',\r\n                backgroundColor: '#e09891',\r\n                WebkitUserSelect: 'none',\r\n              }}\r\n            >\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex p-2\">Shortest Path Node:\r\n            <div\r\n              style={{\r\n                width: '20px',\r\n                height: '20px',\r\n                backgroundColor: '#fee440',\r\n                WebkitUserSelect: 'none',\r\n              }}\r\n            >\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\nNavbar.propTypes = {\r\n  clearWalls: PropTypes.func,\r\n  clearPath: PropTypes.func,\r\n  randomize: PropTypes.func,\r\n  newSpeed: PropTypes.func,\r\n  currentAlgo: PropTypes.string,\r\n  selectAlgo: PropTypes.func,\r\n  visualize: PropTypes.func,\r\n  visual: PropTypes.bool,\r\n  handle: PropTypes.func,\r\n  toggleSource: PropTypes.func,\r\n  toggleDestination: PropTypes.func,\r\n  changeGrid: PropTypes.func,\r\n  changeDestination: PropTypes.func,\r\n  multiDestination: PropTypes.func,\r\n  multipledestinations: PropTypes.bool,\r\n\r\n};\r\nexport default Navbar;\r\n","export const DFS = async function() {\n  const grid = this.state.grid;\n  const flag = 1;\n  const start = this.state.start; const end = this.state.end;\n  const height = this.state.height; const width = this.state.width;\n  const speed = this.state.speed;\n  const par = Array(height).fill().map(() => Array(width).fill(0));\n  par[start[0][0]][start[0][1]] = [start[0][0], start[0][1]];\n  let stack = [start[0]]; // stack for dfs\n  let ok = true;\n  const path = [];\n  while (stack.length !== 0) {\n    const current = stack[stack.length - 1];\n    stack.pop(); // pop from stack\n    if (current[0] < 0 || current[0] >= height) { // for the current to not go out of bounds\n      continue;\n    }\n    if (current[1] < 0 || current[1] >= width) {\n      continue;\n    }\n    if (grid[current[0]][current[1]] === 2 ||\n        grid[current[0]][current[1]] === 1) {\n      continue; // if its a wall or visited cell, continue\n    }\n    if (grid[current[0]][current[1]] === 3) {\n      if (ok) ok = false;\n      else continue;\n    }\n    path.push([current[0], current[1]]);\n    if (grid[current[0]][current[1]] === 4) {\n      this.setState({grid: grid, pointer: current});\n      await new Promise((done) =>\n        setTimeout(() => done(), this.state.speed));\n      break;\n    } else {\n      const list = []; // temporary array to store next points\n      list.push([current[0] + 1, current[1]]); // Go right\n      list.push([current[0], current[1] + 1]); // Go Above\n      list.push([current[0] - 1, current[1]]); // Go Left\n      list.push([current[0], current[1] - 1]); // Go below\n      if (grid[current[0]][current[1]] !== 3) {\n        this.state.grid[current[0]][current[1]] = 2;\n      }\n      stack = stack.concat(list);\n    }\n    this.setState({grid: grid, pointer: current});\n    await new Promise((done) =>\n      setTimeout(() => done(), speed));// To slow down the speed of Animation\n  }\n  if (flag === 0) {\n    this.setState({grid: grid});\n  }\n  const pointer = this.state.pointer;\n  if (pointer[0] !== end[0][0] || pointer[1] !== end[0][1]) {\n    this.showModal();\n    this.setState({visual: false});\n    return;\n  }\n  await this.pathdisplay(path);\n};\n","\nconst top = 0;\nconst parent = (i) => ((i + 1) >>> 1) - 1;\nconst left = (i) => (i << 1) + 1;\nconst right = (i) => (i + 1) << 1;\n/**\n * from https://stackoverflow.com/a/42919752\n */\nclass PriorityQueue {\n  /**\n   *\n   * @param comparator\n   */\n  constructor(comparator = (a, b) => a < b) {\n    this._heap = [];\n    this._comparator = comparator;\n  }\n\n  /**\n   *  size of priority queue\n   * @return {number}\n   */\n  size() {\n    return this._heap.length;\n  }\n\n  /**\n   * returns if priority queue is empty\n   * @return {boolean}\n   */\n  isEmpty() {\n    return this.size() === 0;\n  }\n\n  /**\n   * returns the top element of priority queue\n   * @return {*}\n   */\n  peek() {\n    return this._heap[top];\n  }\n\n  /**\n   * pushes values to the priority queue\n   * @param values\n   * @return {number}\n   */\n  push(...values) {\n    values.forEach((value) => {\n      this._heap.push(value);\n      this._siftUp();\n    });\n    return this.size();\n  }\n\n  /**\n   *  pop from priority queue\n   * @return {*}\n   */\n  pop() {\n    const poppedValue = this.peek();\n    const bottom = this.size() - 1;\n    if (bottom > top) {\n      this._swap(top, bottom);\n    }\n    this._heap.pop();\n    this._siftDown();\n    return poppedValue;\n  }\n\n  /**\n   *\n   * @param value\n   * @return {*}\n   */\n  replace(value) {\n    const replacedValue = this.peek();\n    this._heap[top] = value;\n    this._siftDown();\n    return replacedValue;\n  }\n\n  /**\n   *\n   * @param {number} i\n   * @param {number} j\n   * @return {boolean}\n   * @private\n   */\n  _greater(i, j) {\n    return this._comparator(this._heap[i], this._heap[j]);\n  }\n\n  /**\n   *\n   * @param i\n   * @param j\n   * @private\n   */\n  _swap(i, j) {\n    [this._heap[i], this._heap[j]] = [this._heap[j], this._heap[i]];\n  }\n\n  /**\n   *\n   * @private\n   */\n  _siftUp() {\n    let node = this.size() - 1;\n    while (node > top && this._greater(node, parent(node))) {\n      this._swap(node, parent(node));\n      node = parent(node);\n    }\n  }\n\n  /**\n   *\n   * @private\n   */\n  _siftDown() {\n    let node = top;\n    while (\n      (left(node) < this.size() && this._greater(left(node), node)) ||\n            (right(node) < this.size() && this._greater(right(node), node))\n    ) {\n      const maxChild = (right(node) < this.size() && this._greater(right(node), left(node))) ? right(node) : left(node);\n      this._swap(node, maxChild);\n      node = maxChild;\n    }\n  }\n}\nexport default PriorityQueue;\n","import PriorityQueue from './customPriorityQueue';\n\nexport const Dijkstra = async function() {\n  const start = this.state.start; const end = this.state.end;\n  const height = this.state.height; const width = this.state.width;\n  const queue = new PriorityQueue((a, b) => a[1] < b[1]);\n  queue.push([start[0], 0]);\n  const grid = this.state.grid;\n  const dist = Array(height).fill().map(() =>\n    Array(width).fill(1000000000));\n  const par = Array(height).fill().map(() =>\n    Array(width).fill(0));\n  this.setState({path: [], pointer: start[0]});\n  dist[start[0][0]][start[0][1]] = 0;\n  par[start[0][0]][start[0][1]] =\n      [start[0][0], start[0][1]];\n  let ok = true;\n  while (queue.length !== 0) {\n    const current = queue.peek()[0];\n    queue.pop(); // pop the queue\n    if (grid[current[0]][current[1]] === 1 ||\n        grid[current[0]][current[1]] === 2) {\n      continue; // if a wall or visited continue\n    }\n    if (grid[current[0]][current[1]] === 3) {\n      if (ok) ok = false;\n      else continue; // if you are again pushing the source point, its !ok\n    }\n    if (grid[current[0]][current[1]] === 4) {\n      this.setState({grid: grid, pointer: current});\n      await new Promise((done) =>\n        setTimeout(() => done(), this.state.speed));\n      break;\n    } else {\n      // dijkstra picks the minimum weight path, updates it in its distance array\n      if (current[0] !== height - 1 &&\n          grid[current[0] + 1][current[1]] !== 2) {\n        if (dist[current[0] + 1][current[1]] >\n            dist[current[0]][current[1]] + 1) {\n          dist[current[0] + 1][current[1]] = dist[current[0]][current[1]] + 1;\n          par[current[0] + 1][current[1]] = [current[0], current[1]];\n          queue.push([[current[0] + 1, current[1]],\n            dist[current[0] + 1][current[1]]]);\n        }\n      }\n      if (current[1] !== width - 1 &&\n          grid[current[0]][current[1] + 1] !== 2) {\n        if (dist[current[0]][current[1] + 1] >\n            dist[current[0]][current[1]] + 1) {\n          dist[current[0]][current[1] + 1] = dist[current[0]][current[1]] + 1;\n          par[current[0]][current[1] + 1] = [current[0], current[1]];\n          queue.push([[current[0], current[1] + 1],\n            dist[current[0]][current[1] + 1]]);\n        }\n      }\n      if (current[0] !== 0 && grid[current[0] - 1][current[1]] !== 2) {\n        if (dist[current[0] - 1][current[1]] >\n            dist[current[0]][current[1]] + 1) {\n          dist[current[0] - 1][current[1]] = dist[current[0]][current[1]] + 1;\n          par[current[0] - 1][current[1]] = [current[0], current[1]];\n          queue.push([[current[0] - 1, current[1]],\n            dist[current[0] - 1][current[1]]]);\n        }\n      }\n      if (current[1] !== 0 && grid[current[0]][current[1] - 1] !== 2) {\n        if (dist[current[0]][current[1] - 1] >\n            dist[current[0]][current[1]] + 1) {\n          dist[current[0]][current[1] - 1] = dist[current[0]][current[1]] + 1;\n          par[current[0]][current[1] - 1] = [current[0], current[1]];\n          queue.push([[current[0], current[1] - 1],\n            dist[current[0]][current[1]-1]]);\n        }\n      }\n      if (grid[current[0]][current[1]] !== 3) {\n        grid[current[0]][current[1]] = 2; // mark it as visited\n      }\n      this.setState({grid: grid, pointer: current});\n      await new Promise((done) =>\n        setTimeout(() => done(), this.state.speed));\n    }\n  }\n  if (this.state.pointer[0] !== end[0][0] ||\n      this.state.pointer[1] !== end[0][1]) {\n    this.showModal(); // return if path not found\n    this.setState({visual: false});\n    return;\n  }\n  let ptr = [end[0][0], end[0][1]];\n  while (true) {\n    this.state.path = [...this.state.path, ptr];\n    if (ptr[0] === start[0][0] &&\n        ptr[1] === start[0][1]) break;\n    else ptr = par[ptr[0]][ptr[1]];\n  }\n  this.state.path = this.state.path.reverse();\n  await this.pathdisplay(this.state.path);\n};\n","const directions = [[0, 1], [1, 0], [0, -1], [-1, 0]];\nconst isFeasable = (i, j, grid) => {\n  if (i < 0 || i >=grid.length || j < 0 || j >=grid[0].length) {\n    return false;\n  }\n  return (grid[i][j] === 0 || grid[i][j] === 4);\n};\n\nconst isFeasable2 = (i, j, grid) =>{\n  if (i < 0 || i >=grid.length || j < 0 || j >=grid[0].length) return false;\n  return !(grid[i][j] === 1 || grid[i][j] === 3 || grid[i][j] === 4);\n};\n\nexport const neighbors = (i, j, grid) =>{\n  const answer = [];\n  for (const direction of directions) {\n    const neighbor = [i + direction[0], j + direction[1]];\n    if (isFeasable(neighbor[0], neighbor[1], grid)) {\n      answer.push([neighbor[0], neighbor[1]]);\n    }\n  }\n  return answer;\n};\n\nexport const biNeighbors = (i, j, grid) => {\n  const answer = [];\n  for (const direction of directions) {\n    const neighbor = [i + direction[0], j + direction[1]];\n    if (isFeasable2(neighbor[0], neighbor[1], grid)) {\n      answer.push([neighbor[0], neighbor[1]]);\n    }\n  }\n  return answer;\n};\n\n\n","import PriorityQueue from './customPriorityQueue';\nimport {neighbors} from './Utility';\n\nexport const AStar = async function(w1, w2) {\n  this.computeHeuristics();\n  this.setState({path: [], pointer: this.state.start[0]});\n  const height = this.state.height; const width = this.state.width;\n  const pq = new PriorityQueue((a, b) => a[1] < b[1]);\n  const start = this.state.start; const end = this.state.end;\n  const heuristics = this.state.heuristics; const speed = this.state.speed;\n  pq.push([start[0], heuristics[start[0][0]][start[0][1]]]);\n  const dp = Array(height).fill().map(() => Array(width).fill([]));\n  while (!pq.isEmpty()) {\n    const grid = this.state.grid;\n    const current = pq.peek()[0];\n    pq.pop();\n    this.setState({pointer: current});\n    if (grid[current[0]][current[1]] === 4) {\n      this.setState({grid, pointer: current});\n      break;\n    }\n    const item = neighbors(current[0], current[1], this.state.grid);\n    for (let i =0; i < item.length; i++) {\n      if ((dp[item[i][0]][item[i][1]].length === 0) ||\n          (dp[item[i][0]][item[i][1]].length >\n              dp[current[0]][current[1]].length + 1)) {\n        pq.push([item[i],\n          w1*(dp[current[0]][current[1]].length+1) +\n          w2*this.state.heuristics[item[i][0]][item[i][1]]]);\n        dp[item[i][0]][item[i][1]] = [...dp[current[0]][current[1]], current];\n      }\n    }\n    grid[current[0]][current[1]] = 2;\n    this.setState({grid, pointer: current});\n    await new Promise((done) =>\n      setTimeout(() => done(), speed));\n  }\n  const pointer = this.state.pointer;\n  if (pointer[0] !== end[0][0] || pointer[1] !== end[0][1]) {\n    this.showModal();\n    this.setState({visual: false});\n    return;\n  }\n  const path = dp[end[0][0]][end[0][1]];\n  await this.pathdisplay(path);\n};\n\n\n","import PriorityQueue from './customPriorityQueue';\nexport const TSP = async function() {\n  const unvisited = new Set();\n  for (const item of this.state.end) {\n    unvisited.add(item);\n  }\n  let now = this.state.start[0];\n  let totalpath = [];\n  while (unvisited.size) {\n    const togo = this.findOptimalVertex(this, unvisited, now);\n    unvisited.delete(togo);\n    const newpath = await this.aStarForTSP(this, now, togo);\n    totalpath = totalpath.concat(newpath);\n    now = togo;\n  }\n  await this.pathdisplay(totalpath);\n};\n\nexport const aStarForTSP = async function(AppState, start, end) {\n  const heuristics = AppState.state.heuristics;\n  for (let i = 0; i < AppState.state.height; i++) {\n    for (let j = 0; j < AppState.state.width; j++) {\n      heuristics[i][j] = Math.abs(end[0]-i) + Math.abs(end[1]-j);\n    }\n  }\n  AppState.setState({heuristics: heuristics, path: [], pointer: start, bi: true});\n  const pq = new PriorityQueue((a, b) => a[1] < b[1]);\n  pq.push([start, AppState.state.heuristics[start[0]][start[1]]]);\n  const dp = Array(30)\n      .fill()\n      .map(() => Array(40).fill([]));\n  while (!pq.isEmpty()) {\n    const grid = AppState.state.grid;\n    const current = pq.peek()[0];\n    pq.pop();\n    AppState.setState({current});\n    if (grid[current[0]][current[1]] === 4) {\n      AppState.setState({grid, pointer: current});\n      break;\n    }\n    if (current[1] !== AppState.state.width - 1 &&\n        (grid[current[0]][current[1] + 1] === 0 ||\n            grid[current[0]][current[1] + 1] === 4)) {\n      if (dp[current[0]][current[1] + 1].length === 0 ||\n          dp[current[0]][current[1] + 1].length >\n          [...dp[current[0]][current[1]], current].length) {\n        // pq.enqueue([current[0], current[1] + 1],\n        //     dp[current[0]][current[1]].length+\n        //     AppState.state.heuristics[current[0]][current[1] + 1]);\n        pq.push([[current[0], current[1] + 1],\n          dp[current[0]][current[1]].length+\n        AppState.state.heuristics[current[0]][current[1] + 1]]);\n        dp[current[0]][current[1] + 1] =\n            [...dp[current[0]][current[1]], current];\n      }\n    }\n    if (current[0] !== AppState.state.height - 1 &&\n        ((grid[current[0] + 1][current[1]] === 0) ||\n            grid[current[0] + 1][current[1]] === 4)) {\n      if (dp[current[0] + 1][current[1]].length === 0 ||\n          dp[current[0] + 1][current[1]].length >\n          [...dp[current[0]][current[1]], current]) {\n        // pq.enqueue([current[0] + 1, current[1]],\n        //     dp[current[0]][current[1]].length+\n        //     AppState.state.heuristics[current[0] + 1][current[1]]);\n\n        pq.push([[current[0] + 1, current[1]],\n          dp[current[0]][current[1]].length+\n        AppState.state.heuristics[current[0] + 1][current[1]]]);\n        dp[current[0] + 1][current[1]] =\n            [...dp[current[0]][current[1]], current];\n      }\n    }\n    if (current[0] !== 0 && (grid[current[0] - 1][current[1]] === 0 ||\n        (grid[current[0] - 1][current[1]] === 4))) {\n      if (dp[current[0] - 1][current[1]].length === 0 ||\n          dp[current[0] - 1][current[1]].length >\n          [...dp[current[0]][current[1]], current]) {\n        // pq.enqueue([current[0] - 1, current[1]],\n        //     dp[current[0]][current[1]].length+\n        //     AppState.state.heuristics[current[0] - 1][current[1]]);\n\n        pq.push([[current[0] - 1,\n          current[1]], dp[current[0]][current[1]].length+\n        AppState.state.heuristics[current[0] - 1][current[1]]]);\n        dp[current[0] - 1][current[1]] =\n            [...dp[current[0]][current[1]], current];\n      }\n    }\n    if (current[1] !== 0 && (grid[current[0]][current[1] - 1] === 0 ||\n        (grid[current[0]][current[1]-1] === 4))) {\n      if (dp[current[0]][current[1] - 1].length === 0 ||\n          dp[current[0]][current[1] - 1].length >\n          [...dp[current[0]][current[1]], current].length) {\n        // pq.enqueue([current[0], current[1] - 1],\n        //     dp[current[0]][current[1]].length+\n        //     AppState.state.heuristics[current[0]][current[1] - 1]);\n        pq.push([[current[0], current[1] - 1],\n          dp[current[0]][current[1]].length+\n        AppState.state.heuristics[current[0]][current[1] - 1]]);\n        dp[current[0]][current[1] - 1] =\n            [...dp[current[0]][current[1]], current];\n      }\n    }\n    grid[current[0]][current[1]] = 2; // AppState node as visited\n    AppState.setState({grid, pointer: current});\n    await new Promise((done) =>\n      setTimeout(() => done(), AppState.state.speed));\n  }\n  const grid = AppState.state.grid;\n  for (let i = 0; i < AppState.state.height; i++) {\n    for (let j = 0; j < AppState.state.width; j++) {\n      if (grid[i][j] ===2) {\n        grid[i][j] = 0;\n      }\n    }\n  }\n  grid[start[0]][start[1]] = 0;\n  grid[end[0]][end[1]] = 3;\n  await AppState.setState({grid});\n  return dp[end[0]][end[1]];\n};\nexport const findOptimalVertex = (AppState, unvisited, source) =>{\n  const pq = new PriorityQueue((a, b) => a[1] < b[1]);\n  const sourceMapped = AppState.state.graph.map2[source];\n  for (const item of unvisited) {\n    const destinationMapped = AppState.state.graph.map2[item];\n    pq.push([item,\n      AppState.state.graph.allPairShortest[sourceMapped][destinationMapped]]);\n  }\n  return pq.peek()[0];\n};\n","import {neighbors} from './Utility';\n\nexport const BFS = async function() {\n  const start = this.state.start; const end = this.state.end;\n  const height = this.state.height; const width = this.state.width;\n  const speed = this.state.speed; const grid = this.state.grid;\n  this.setState({pointer: start[0]});\n  const queue = [start[0]]; // queue needed in bfs\n  const par = Array(height).fill().map(() => Array(width).fill([]));\n  par[start[0][0]][start[0][1]] = start[0];\n  let ok = true;\n  while (queue.length !== 0) {\n    const current = queue[0];\n    queue.shift(); // pop the first item from the queue\n    if (grid[current[0]][current[1]] === 1 ||\n        grid[current[0]][current[1]] === 2) {\n      continue; // if its a wall or already visited cell then continue\n    }\n    if (grid[current[0]][current[1]] === 3) { // if again visits the start point\n      if (ok) {\n        ok = false;\n      } else {\n        continue;\n      }\n    }\n    if (grid[current[0]][current[1]] === 4) { // reached goal\n      this.setState({grid});\n      this.setState({pointer: current});\n      await new Promise((done) =>\n        setTimeout(() => done(), speed));\n      break;\n    } else {\n      const item = neighbors(current[0], current[1], this.state.grid); // finding neighbours of the current cell\n      for (const neighbor of item) {\n        par[neighbor[0]][neighbor[1]] = [current[0], current[1]];\n        queue.push([neighbor[0], neighbor[1]]); // push the neighbours in the queue\n      }\n      if (grid[current[0]][current[1]] !== 3) {\n        grid[current[0]][current[1]] = 2; // if not end/start, mark the node as visited\n      }\n      this.setState({grid, pointer: current});\n\n      await new Promise((done) =>\n        setTimeout(() => done(), speed)); // to slow down the speed of animation\n    }\n  }\n  const pointer = this.state.pointer;\n  if (pointer[0] !== end[0][0] || pointer[1] !== end[0][1]) { // display path not found\n    this.showModal();\n    this.setState({visual: false});\n    return;\n  }\n  let ptr = [end[0][0], end[0][1]];\n  const path = [];\n  while (ptr[0] !== start[0][0] || ptr[1] !== start[0][1]) {\n    path.push(ptr); console.log({ptr});\n    console.log(path);\n    ptr = par[ptr[0]][ptr[1]];\n  }\n  console.log(path);\n  await this.pathdisplay(path.reverse());\n};\n\n","import App from '../App';\nlet heuristics = [];\nlet ok = false;\nlet end = [];\nlet path = [];\nlet grid = [];\n\nexport const IDAstar = async function() {\n  heuristics = this.state.heuristics;\n  grid = this.state.grid;\n  end = this.state.end[0];\n  // console.log(end);\n  this.computeHeuristics();\n  const root = [this.state.start[0][0], this.state.start[0][1]];\n  let bound = heuristics[root[0]][root[1]];\n  path = [...path, root];\n  while (true) {\n    const t = search(this, root, 0, bound);\n    if (ok) {\n      break;\n    }\n    if (t === true) return root;\n    if (t === 50) return [];\n\n    if (ok) {\n      break;\n    }\n    bound = t;\n  }\n  // console.log(path);\n  this.pathdisplay(path);\n};\n// trying to impliment https://en.wikipedia.org/wiki/Iterative_deepening_A*#Pseudocode\nfunction search(AppState, node, g, bound) {\n  // console.log(path);\n  // AppState.setState({pointer: node});\n  // console.log(AppState);\n  // console.log(node);\n  path = [...path, node];\n  // console.log(path);\n  if (node[0] === end[0] && node[1] === end[1]) {\n    ok = true;\n    return true;\n  }\n  // console.log(g);\n  // console.log(heuristics);\n  const f = g + heuristics[node[0]][node[1]];\n  if (f > bound) return f;\n  if (node[0] === end[0] && node[1] === end[1]) {\n    // console.log('Radhesh');\n    ok = true;\n    return true;\n  }\n  let min = 50;\n  const neighborr = neighbors(node[0], node[1]);\n  for (let i = 0; i < neighborr.length; i++) {\n    if (ok) {\n      return true;\n    }\n    // console.log(neighborr[i]);\n    //  if (!path.includes([neighborr[i][0], neighborr[i][1]])) {\n    // console.log('Radhesh');\n    // / path = [...path, [neighborr[i][0], neighborr[i][1]]];\n    // AppState.setState({pointer: neighborr[i]});\n    // console.log(path);\n    const t = search(AppState, neighborr[i], g+1, bound);\n    if (ok) return true;\n    if (t === true) {\n      return true;\n    } else if (t < min) {\n      min = t;\n    }\n    //  path.pop();\n    // }\n  }\n  return min;\n}\n\n/**\n *\n * @param {number}i\n * @param {number} j\n * @return {[]}\n */\nfunction neighbors(i, j) {\n  let answer = [];\n  for (const direction of directions) {\n    const neighbor = [i + direction[0], j + direction[1]];\n    if (isGoodCell(neighbor[0], neighbor[1])) {\n      answer = [...answer, [neighbor[0], neighbor[1]]];\n    }\n  }\n  // console.log(answer);\n  return answer;\n}\nconst isGoodCell = (i, j) =>{\n  if (i < 0 || i >=20 || j < 0 || j >=20) return false;\n  return grid[i][j] !== 1;\n};\n\nconst directions = [[0, 1], [1, 0], [0, -1], [-1, 0]];\n","export const BiBFS = async function() {\n  this.setState({path: [], pointer: this.state.start[0], pointer2: this.state.end[0]});\n  let queue1 = [this.state.start[0]];\n  let queue2 = [this.state.end[0]];\n  const height = this.state.height;\n  const width = this.state.width;\n  const grid = this.state.grid;\n  const directions = [[0, 1], [1, 0], [0, -1], [-1, 0]];\n\n  const isGoodCell = (i, j) =>{\n    if (i < 0 || i >=height || j < 0 || j >=width) return false;\n    if (grid[i][j]===1 || grid[i][j] === 3 || grid[i][j] === 4) return false;\n    return true;\n  };\n  const start = this.state.start[0];\n  const end = this.state.end[0];\n\n  const par1 = Array(height).fill().map(() => Array(width).fill([]));\n  const par2 = Array(height).fill().map(() => Array(width).fill([]));\n  const visited = Array(height).fill().map(() => Array(width).fill(0));\n\n\n  par1[start[0]][start[1]] = start;\n  par2[end[0]][end[1]] = end;\n\n  let ptr;\n  const mySet = new Set();\n\n  while (queue1.length !==0 && queue2.length !== 0) {\n    const current = queue1[0]; // current of forward path\n    const revcurrent = queue2[0]; // current pointer of reverse path\n    let flag1=false; let flag2=false;\n    if (visited[current[0]][current[1]] === 2) {\n      ptr = current; break;\n    } else {\n      visited[current[0]][current[1]] = 1;\n    }\n    if (visited[revcurrent[0]][revcurrent[1]] === 1) {\n      ptr = revcurrent; break;\n    } else {\n      visited[revcurrent[0]][revcurrent[1]] = 2;\n    }\n\n    queue1.shift();\n    queue2.shift();\n    const list1 = [];\n    const list2 = [];\n\n    for (const dir of directions) {\n      const neighbour1 = [current[0] + dir[0], current[1] + dir[1]];\n      if (isGoodCell(neighbour1[0], neighbour1[1])) {\n        if (visited[neighbour1[0]][neighbour1[1]] === 1 ) {\n          continue;\n        }\n        if (grid[neighbour1[0]][neighbour1[1]] === 2) continue;\n        par1[neighbour1[0]][neighbour1[1]] = current;\n        if (visited[neighbour1[0]][neighbour1[1]] === 2 ) {\n          ptr=neighbour1; flag1=true; break;\n        }\n        if ( neighbour1[0]===start[0] && neighbour1[1]===start[1]) continue;\n\n        list1.push(neighbour1);\n        grid[neighbour1[0]][neighbour1[1]] = 2;\n      }\n    }\n    queue1 = queue1.concat(list1);\n    if (flag1) break;\n    for (const dir of directions) {\n      const neighbour2 = [revcurrent[0] + dir[0], revcurrent[1] + dir[1]];\n      if (isGoodCell(neighbour2[0], neighbour2[1])) {\n        if (visited[neighbour2[0]][neighbour2[1]] === 2 ) {\n          continue;\n        }\n        if (grid[neighbour2[0]][neighbour2[1]] === 6) continue;\n        par2[neighbour2[0]][neighbour2[1]] = revcurrent;\n        if (visited[neighbour2[0]][neighbour2[1]] === 1 ) {\n          ptr = neighbour2; flag2=true; break;\n        }\n\n        if (neighbour2[0]===end[0] && neighbour2[1]===end[1]) continue;\n        list2.push(neighbour2);\n        grid[neighbour2[0]][neighbour2[1]] = 6;\n      }\n    }\n    queue2 = queue2.concat(list2);\n    this.setState({grid: grid, pointer: current, pointer2: revcurrent, bi: true});\n    await new Promise((done) => setTimeout(() => done(), this.state.speed));// To slow down the speed of Animation\n    if (flag1 || flag2) {\n      break;\n    }\n  }\n\n  const breakpoint = ptr;\n  while (true) {\n    this.state.path = [...this.state.path, ptr];\n    if (ptr[0] === this.state.start[0][0] && ptr[1] === this.state.start[0][1]) break;\n    else {\n      ptr = par1[ptr[0]][ptr[1]];\n    }\n  }\n  this.state.path = this.state.path.reverse();\n  ptr = breakpoint;\n  let pth2= [];\n  while (true) {\n    pth2 = [...pth2, ptr];\n    if (ptr[0] === end[0] && ptr[1] === end[1]) break;\n    else {\n      ptr = par2[ptr[0]][ptr[1]];\n    }\n  }\n  pth2 = pth2.reverse();\n  this.state.path = this.state.path.concat(pth2);\n  console.log(mySet);\n  await this.pathdisplay(this.state.path);\n};\n","import PriorityQueue from './customPriorityQueue';\nimport {biNeighbors} from './Utility';\nexport const BiAstar = async function() {\n  this.computeHeuristics();\n  const start = this.state.start; const end = this.state.end;\n  const height = this.state.height; const width = this.state.width;\n  const heuristics = this.state.heuristics; const speed = this.state.speed;\n  const reverseHeuristics = this.state.reverseHeuristics;\n  let meetpoint1; let meetpoint2;\n  this.setState({pointer: start[0], pointer2: end[0]});\n  const visited1 = Array(height).fill().map(() => Array(width).fill(0));\n  const visited2 = Array(height).fill().map(() => Array(width).fill(0));\n  const forwardPQ = new PriorityQueue((a, b) => a[1] < b[1]);\n  const backwardPQ = new PriorityQueue((a, b) => a[1] < b[1]);\n  forwardPQ.push([start[0], 0]);\n  backwardPQ.push([end[0], 0]);\n  const forwardDP = Array(height).fill().map(() => Array(width).fill([]));\n  const backwardDP = Array(height).fill().map(() => Array(width).fill([]));\n  let ok = 0;\n  while (!forwardPQ.isEmpty() && !backwardPQ.isEmpty()) {\n    const grid = this.state.grid;\n    const current1 = forwardPQ.peek()[0]; const current2 = backwardPQ.peek()[0];\n    this.setState({pointer: current1, pointer2: current2, bi: true});\n    await new Promise((done) => setTimeout(() => done(), speed));\n    visited1[current1[0]][current1[1]] = 1;\n    visited2[current2[0]][current2[1]] = 1;\n    forwardPQ.pop(); backwardPQ.pop();\n    let item = biNeighbors(current1[0], current1[1], this.state.grid);\n    for (let i =0; i < item.length; i++) {\n      if (item[i][0] === start[0] && item[i][1] === start[1]) continue;\n      if (visited2[item[i][0]][item[i][1]] === 1) {\n        meetpoint2 = item[i]; meetpoint1 = current1;\n        ok = 1;\n        break;\n      }\n      if ((forwardDP[item[i][0]][item[i][1]].length === 0) ||\n          (forwardDP[item[i][0]][item[i][1]].length >\n              forwardDP[current1[0]][current1[1]].length + 1)) {\n        forwardPQ.push([item[i], (forwardDP[item[i][0]][item[i][1]].length+1) +\n        heuristics[item[i][0]][item[i][1]]]);\n        forwardDP[item[i][0]][item[i][1]] =\n            [...forwardDP[current1[0]][current1[1]], current1];\n        grid[current1[0]][current1[1]] = 2;\n        this.setState({grid});\n      }\n    }\n    item = biNeighbors(current2[0], current2[1], this.state.grid);\n    for (let i =0; i < item.length; i++) {\n      if (item[i][0] === end[0] && item[i][1] === end[1]) continue;\n      if (visited1[item[i][0]][item[i][1]] === 1) {\n        meetpoint2 = current2;\n        meetpoint1 = item[i];\n        ok = 1;\n        break;\n      }\n      if ((backwardDP[item[i][0]][item[i][1]].length === 0) ||\n          (backwardDP[item[i][0]][item[i][1]].length >\n              backwardDP[current2[0]][current2[1]].length + 1)) {\n        backwardPQ.push([item[i],\n          (backwardDP[item[i][0]][item[i][1]].length+1) +\n          reverseHeuristics[item[i][0]][item[i][1]]]);\n        backwardDP[item[i][0]][item[i][1]] =\n            [...backwardDP[current2[0]][current2[1]], current2];\n        grid[current2[0]][current2[1]] = 2;\n        this.setState({grid});\n      }\n    }\n    if (ok === 1) break;\n  }\n  const path = [...forwardDP[meetpoint1[0]][meetpoint1[1]],\n    ...backwardDP[meetpoint2[0]][meetpoint2[1]].reverse()];\n  await this.pathdisplay(path);\n};\n","import PriorityQueue from './customPriorityQueue';\nimport {biNeighbors} from './Utility';\n\nexport const BidirectionalDijkstra = async function() {\n  const start = this.state.start[0];\n  const end = this.state.end[0];\n  const height = this.state.height; const width = this.state.width;\n  const heuristics = this.state.heuristics;\n  const reverseHeuristics = this.state.reverseHeuristics;\n  let meetpoint1; let meetpoint2; // the breakpoint from either direction\n  this.setState({pointer: start[0], pointer2: end[0], bi: true});\n  const visited1 = Array(height).fill(undefined,\n      undefined, undefined).map(() =>\n    Array(width).fill(0)); // visited array to aid finding and stopping at common points\n  const visited2 = Array(height).fill(undefined,\n      undefined, undefined).map(() =>\n    Array(width).fill(0));\n  const forwardPQ = new PriorityQueue((a, b) => a[1] < b[1]); // forward PQ for points from Start end\n  const backwardPQ = new PriorityQueue((a, b) => a[1] < b[1]); // Priority queue for points from the other end\n  forwardPQ.push([start, 0]);\n  backwardPQ.push([end, 0]);\n  // Parent arrays to restore the path\n  const par1 = Array(height).fill().map(() => Array(width).fill([]));\n  const par2 = Array(height).fill().map(() => Array(width).fill([]));\n  par1[start[0]][start[1]] = start;\n  par2[end[0]][end[1]] = end;\n\n  let ok = 0;\n  // initialising of heuristics\n  for (let i = 0; i < height; i++) {\n    for (let j = 0; j < width; j++) {\n      heuristics[i][j] = 0;\n      reverseHeuristics[i][j] = 0;\n    }\n  }\n  // initialising the distance array to a Maxima\n  const dist1 = Array(height).fill().map(() =>\n    Array(width).fill(1000000000));\n  const dist2 = Array(height).fill().map(() =>\n    Array(width).fill(1000000000));\n  dist1[start[0]][start[1]] = 0;\n  dist2[end[0]][end[1]] = 0;\n\n  while (!forwardPQ.isEmpty() && !backwardPQ.isEmpty()) {\n    const grid = this.state.grid;\n    const current1 = forwardPQ.peek()[0];\n    const current2 = backwardPQ.peek()[0];\n    this.setState({pointer: current1, pointer2: current2});\n    await new Promise((done) =>\n      setTimeout(() => done(), this.state.speed));\n    visited1[current1[0]][current1[1]] = 1; // marking current pointers visited\n    visited2[current2[0]][current2[1]] = 1;\n    forwardPQ.pop(); backwardPQ.pop();\n    const neighbor1 = biNeighbors(current1[0], current1[1], this.state.grid);\n    const neighbor2 = biNeighbors(current2[0], current2[1], this.state.grid);\n    for (const item of neighbor1) {\n      // iterating over the neighbours from front\n      if (item[0] === start[0] && item[1] === start[1]) continue;\n      if (visited2[item[0]][item[1]] === 1) {\n        meetpoint2 = item; meetpoint1 = current1;\n        ok = 1;\n        break;\n      }\n\n      if ( dist1[current1[0]][current1[1]] + 1< dist1[item[0]][item[1]]) {\n        dist1[item[0]][item[1]] = dist1[current1[0]][current1[1]] + 1;\n        par1[item[0]][item[1]] = current1;\n        forwardPQ.push([item,\n          dist1[item[0]][item[1]]]);\n      }\n    }\n    if (ok === 1) break;\n    // iterating over neighbours from back\n    for (const item of neighbor2) {\n      if (item[0] === end[0] && item[1] === end[1]) continue;\n\n      if (visited1[item[0]][item[1]] === 1) {\n        meetpoint2 = current2;\n        meetpoint1 = item;\n        ok = 1;\n        break;\n      }\n      if ( dist2[current2[0]][current2[1]] + 1< dist2[item[0]][item[1]]) {\n        dist2[item[0]][item[1]] = dist2[current2[0]][current2[1]] + 1;\n        par2[item[0]][item[1]] = current2;\n        backwardPQ.push([item,\n          dist2[item[0]][item[1]]] );\n      }\n    }\n    grid[current1[0]][current1[1]] = 2;\n    grid[current2[0]][current2[1]] = 6;\n    grid[start[0]][start[1]]=3;\n    grid[end[0]][end[1]]=4;\n    this.setState({grid});\n    if (ok === 1) break;\n  }\n\n  // Retrieving the found path\n  let ptr = meetpoint1;\n\n  while (true) {\n    this.state.path = [...this.state.path, ptr];\n    if (ptr[0] === start[0] && ptr[1] === start[1]) break;\n    else {\n      ptr = par1[ptr[0]][ptr[1]];\n    }\n  }\n  this.state.path = this.state.path.reverse();\n  ptr = meetpoint2;\n  let pth2= [];\n  while (true) {\n    pth2 = [...pth2, ptr];\n    if (ptr[0] === end[0] && ptr[1] === end[1]) break;\n    else {\n      ptr = par2[ptr[0]][ptr[1]];\n    }\n  }\n\n  pth2 = pth2.reverse();\n  this.state.path = this.state.path.concat(pth2);\n  console.log(this.state.path);\n\n  await this.pathdisplay(this.state.path);\n};\n","import PropTypes from 'prop-types';\n/**\n *\n */\nclass Graph {\n  /**\n   *\n   * @param {array} grid\n   * @param {number} height\n   * @param {number} width\n   */\n  constructor(grid, height, width) {\n    this.adjacencyList = {};\n    this.allPairShortest = Array(height*width).\n        fill(undefined, undefined, undefined).map(() =>\n          Array(height*width).fill(1000000000));\n    this.grid = grid;\n    this.map1 = new Map();\n    this.map2 = new Map();\n    this.height = height;\n    this.width = width;\n    let counter = 0;\n    for (let i = 0; i < this.height; i++) {\n      for (let j = 0; j < this.width; j++) {\n        this.map1[counter] = [[i, j]];\n        this.map2[[i, j]] = counter;\n        counter++;\n      }\n    }\n\n    this.constructGraph();\n    this.floydWarshall();\n  }\n\n  /**\n   *\n   * @param {number} vertex\n   */\n  addVertex(vertex) {\n    if (!this.adjacencyList[vertex]) {\n      this.adjacencyList[vertex] = [];\n    }\n  }\n\n  /**\n   *\n   * @param {number} source\n   * @param {number} destination\n   */\n  addEdge(source, destination) {\n    if (!this.adjacencyList[source]) {\n      this.addVertex(source);\n    }\n    if (!this.adjacencyList[destination]) {\n      this.addVertex(destination);\n    }\n    this.adjacencyList[source].push(destination);\n    this.adjacencyList[destination].push(source);\n  }\n\n  /**\n   *\n   * @param {number} i\n   * @param {number} j\n   * @return {boolean}\n   */\n  isNotWall(i, j) {\n    if (i < 0 || i >= this.height || j < 0 || j >= this.width ) {\n      return false;\n    } else {\n      console.log(this.grid);\n      return this.grid[i][j] !== 1;\n    }\n  }\n\n\n  /**\n   *\n   */\n  constructGraph() {\n    for (let i = 0; i < this.height; i++) {\n      for (let j = 0; j < this.width; j++) {\n        if (this.isNotWall(i, j)) {\n          for (const direction of directions) {\n            const neighbor = [i + direction[0], j + direction[1]];\n            if (this.isNotWall(neighbor[0], neighbor[1])) {\n              const x = this.map2[[i, j]];\n              const y = this.map2[[neighbor[0], neighbor[1]]];\n              this.addEdge(x, y);\n              this.allPairShortest[x][y] = 1;\n              this.allPairShortest[y][x] = 1;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   *Floyd Warshal Algo to store distances betwenn all pairs of vertices\n   */\n  floydWarshall() {\n    for (let k = 0; k < this.height*this.width; k++) {\n      for (let i = 0; i < this.height*this.width; i++) {\n        for (let j = 0; j < this.height*this.width; j++) {\n          this.allPairShortest[i][j] =\n              Math.min(this.allPairShortest[i][j],\n                  this.allPairShortest[i][k] +\n                  this.allPairShortest[k][j]);\n          this.allPairShortest[j][i] = this.allPairShortest[i][j];\n        }\n      }\n    }\n  }\n}\n\nGraph.propTypes = {\n  grid: PropTypes.array,\n};\nexport default Graph;\nconst directions = [[0, 1], [1, 0], [0, -1], [-1, 0]];\n","import React, { Component } from \"react\";\r\nimport Grid from \"./components/Grid\";\r\nimport Navbar from \"./components/Navbar\"\r\nimport Modal from  \"react-bootstrap/Modal\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport {DFS} from \"./Algo/dfs\";\r\nimport {Dijkstra} from \"./Algo/Dijkstra\";\r\nimport {AStar} from \"./Algo/AStar\";\r\nimport {findOptimalVertex} from \"./Algo/TSP\";\r\nimport {aStarForTSP} from \"./Algo/TSP\";\r\nimport {TSP} from \"./Algo/TSP\";\r\nimport {BFS} from \"./Algo/BFS\";\r\nimport {IDAstar} from \"./Algo/IDAStar\";\r\nimport {BiBFS} from \"./Algo/BiBFS\";\r\nimport{BiAstar} from \"./Algo/BiAstar\";\r\nimport {BidirectionalDijkstra} from \"./Algo/BidirectionalDijkstra\";\r\nimport Graph from \"./Algo/Graph\";\r\n//This is the modal to display path not found\r\nconst D = ({ handleClose, show}) => {\r\n    return (\r\n        <>\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                style={{\r\n                    opacity: \"90%\",\r\n                    backgroundColor: '#000000',\r\n                    color: '#fee440'\r\n                }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Uh-Oh!!</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    PATH TO THE TARGET NOT FOUND!\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\nclass App extends Component {\r\n    state = {\r\n        height: 20, // height of the grid\r\n        width: 20, // width of the grid\r\n        start: [[10, 9]], // start position\r\n        end: [[10, 15]],// end position\r\n        grid: Array(20).fill(undefined, undefined, undefined).map(() => Array(20).fill(0)),\r\n        speed: 0.100, // speed for animation\r\n        pointer: [], // store the pointer for visualization\r\n        pointer2:[],//for bidirectional visualization\r\n        modalshow: false,\r\n        heuristics:Array(20).fill(undefined, undefined, undefined).map(() => Array(20).fill(0)),\r\n        reverseHeuristics:Array(20).fill(undefined, undefined, undefined).map(() => Array(20).fill(0)),\r\n        path: [],\r\n        graph:null,\r\n        changeSource:false,\r\n        changeDestination:false,\r\n        multipledestinations:false,\r\n        visual:false,\r\n        currentAlgo: \"Not Selected\",\r\n        bi: false, //boolean indicator for bidirectional algos\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.state.grid[this.state.start[0][0]][this.state.start[0][1]] = 3; // special point : start point\r\n        this.state.grid[this.state.end[0][0]][this.state.end[0][1]] = 4; // special point : end point\r\n        this.computeHeuristics();\r\n    }\r\n    DFS = DFS.bind(this);\r\n    BFS = BFS.bind(this);\r\n    Dijkstra = Dijkstra.bind(this);\r\n    AStar = AStar.bind(this);\r\n    TSP = TSP.bind(this);\r\n    aStarForTSP = aStarForTSP.bind(this);\r\n    findOptimalVertex = findOptimalVertex.bind(this);\r\n    IDAstar = IDAstar.bind(this);\r\n    BiBFS = BiBFS.bind(this);\r\n    BiAstar = BiAstar.bind(this);\r\n    BidirectionalDijkstra = BidirectionalDijkstra.bind(this);\r\n\r\n    toggleSource=()=>this.setState({changeSource: !this.state.changeSource});\r\n    toggleDestination = ()=>{\r\n        if(this.state.multipledestinations) this.setState({changeDestination: true});\r\n        else this.setState({changeDestination: !this.state.changeDestination});\r\n    }\r\n    changedSource=(i,j)=> {\r\n        let grid = this.state.grid;\r\n        grid[this.state.start[0][0]][this.state.start[0][1]] = 0;\r\n        grid[i][j] = 3; // special point : end point\r\n        this.setState({\r\n            changeSource: !this.state.changeSource,\r\n            start: [[i, j]],\r\n            grid,\r\n        });\r\n    }\r\n    changedDestination = (i,j)=> {\r\n        let grid = this.state.grid;\r\n        grid[i][j] = 4; // special point : end point\r\n        if(!this.state.multipledestinations)\r\n        {grid[this.state.end[0][0]][this.state.end[0][1]] = 0;}\r\n        else{\r\n\r\n            this.setState({end: [...this.state.end,[i,j]],grid});\r\n            console.log(this.state.end);return;\r\n\r\n        }\r\n\r\n        this.setState({\r\n            changeDestination: !this.state.changeDestination,\r\n            end: [[i,j]],\r\n            grid,\r\n        });\r\n    }\r\n    multiDestination = () => {\r\n\r\n            this.setState({multipledestinations:!this.state.multipledestinations});\r\n\r\n    }\r\n    showModal = () => this.setState({ modalshow: true });\r\n    hideModal = () => this.setState({ modalshow: false });\r\n    computeHeuristics= ()=>{\r\n        const heuristics = this.state.heuristics;\r\n        const start = this.state.start; const end = this.state.end;\r\n        const height = this.state.height; const width = this.state.width;\r\n        for(let i = 0; i < height; i++)\r\n            for(let j = 0; j < width; j++)\r\n                heuristics[i][j] = Math.abs(end[0][0]-i) + Math.abs(end[0][1]-j);\r\n    \r\n        const reverseHeuristics = this.state.reverseHeuristics;\r\n        for(let i = 0; i < height; i++)\r\n            for(let j = 0; j < width; j++)\r\n                reverseHeuristics[i][j] = Math.abs(start[0][0]-i) + Math.abs(start[0][1]-j);\r\n        \r\n        this.setState({heuristics,reverseHeuristics});\r\n    }\r\n    randomizeMatrix = () => {\r\n        this.clearGrid();\r\n        const newGrid = Array(this.state.height).fill(undefined, undefined, undefined).map(() => Array(this.state.width).fill(0));\r\n        for (let i = 0; i < this.state.height; i++) {\r\n            for (let j = 0; j < this.state.width; j++) {\r\n                newGrid[i][j] = (Math.floor(Math.random() * 10) % 2); // random values of zero or one to generate a random grid of walls amd empty cells\r\n            }\r\n        }\r\n        newGrid[this.state.start[0][0]][this.state.start[0][1]] = 3; // special point : start\r\n        newGrid[this.state.end[0][0]][this.state.end[0][1]] = 4; // special point : end\r\n        this.setState({grid: newGrid});\r\n    }\r\n    clearGrid = () => {\r\n        const newGrid = Array(this.state.height).fill(undefined, undefined, undefined).map(() => Array(this.state.width).fill(0));\r\n        newGrid[this.state.start[0][0]][this.state.start[0][1]] = 3; // special point : start\r\n        newGrid[this.state.end[0][0]][this.state.end[0][1]] = 4; // special point : end\r\n        this.setState({grid: newGrid, pointer: [],pointer2:[]});\r\n    }\r\n    changeState = (x, y) => {\r\n        if (this.state.grid[x][y] === 3) return; // check if the current point is a special point (start or end)\r\n        let grid = this.state.grid;\r\n        if (grid[x][y] === 0 || grid[x][y] === 2) { // if it is a visited cell or empty , make it a wall\r\n            grid[x][y] = 1;\r\n        } else {  // convert a wall to empty cell\r\n            grid[x][y] = 0;\r\n        }\r\n        grid[this.state.start[0][0]][this.state.start[0][1]] = 3;\r\n        grid[this.state.end[0][0]][this.state.end[0][1]] = 4;\r\n        this.setState({grid: grid});\r\n    }\r\n    changeSpeed = (newSpeed) => this.setState({speed:newSpeed});\r\n    selectAlgo = (name) => this.setState({currentAlgo: name});\r\n    visualize = async () => {\r\n        if(this.state.currentAlgo === \"Not Selected\")return;\r\n        let pointer = this.state.pointer;\r\n        pointer[0] = this.state.start[0][0];\r\n        pointer[1] = this.state.start[0][1];\r\n        this.setState({pointer, visual: true});\r\n\r\n        if (this.state.start[0] === this.state.end[0][0] && this.state.start[1] === this.state.end[0][1]) return;\r\n\r\n        if (this.state.start[0][0] === this.state.end[0][0] && this.state.start[0][1] === this.state.end[0][1]) return;\r\n\r\n        else if (this.state.currentAlgo === \"DFS\") await this.DFS();\r\n        else if (this.state.currentAlgo === \"Dijkstra\")  await this.Dijkstra();\r\n        else if(this.state.currentAlgo === \"BFS\") await this.BFS();\r\n        else if(this.state.currentAlgo === \"biDijkstra\") await this.BidirectionalDijkstra();\r\n        else if (this.state.currentAlgo === \"Best-FS\") await this.AStar(0,1);\r\n        else if (this.state.currentAlgo === \"A*\") await this.AStar(1,1);\r\n        else if(this.state.currentAlgo === \"Weighted-AStar\")await this.AStar(1,10);\r\n        else if (this.state.currentAlgo === \"TSP\")\r\n        {\r\n            this.state.graph = new Graph(this.state.grid,this.state.height,this.state.width);\r\n            await this.TSP();\r\n        }\r\n        else if(this.state.currentAlgo === \"IDAStar\")await this.IDAstar();\r\n        else if(this.state.currentAlgo === \"biBFS\")await this.BiBFS();\r\n        else if(this.state.currentAlgo === \"BiAstar\")await  this.BiAstar();\r\n\r\n    }\r\n    pathdisplay = async (path) => {\r\n        let grid = this.state.grid;\r\n        for (let i = 1; i < path.length; i++) {\r\n            grid[path[i][0]][path[i][1]] = 5;\r\n            await new Promise((done) => setTimeout(() => done(), this.state.speed));\r\n            this.setState({grid: grid});\r\n        }\r\n        if(!this.state.bi) grid[this.state.end[0][0]][this.state.end[0][1]] = 5;\r\n        else  grid[this.state.end[0][0]][this.state.end[0][1]] = 4;\r\n        grid[this.state.start[0][0]][this.state.start[0][1]] = 3;\r\n\r\n        await new Promise((done) => setTimeout(() => done(), this.state.speed));\r\n        this.setState({grid: grid,visual: false,bi:false, pointer:[], pointer2:[]});\r\n    }\r\n    clearPath = () => {\r\n        let g = this.state.grid,path = this.state.path;\r\n        for(let i = 0; i < path.length; i++)g[path[i][0]][path[i][1]] = 2;\r\n        this.setState({path:[],grid: g});\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"navigation\">\r\n                    <Navbar randomize={this.randomizeMatrix} clearWalls={this.clearGrid} newSpeed={this.changeSpeed} multiDestination={this.multiDestination}\r\n                            handle={this.selectAlgo} selectedAlgo={this.currentAlgo} visualize={this.visualize} clearPath = {this.clearPath}\r\n                            multipledestinations = {this.state.multipledestinations} visual={this.state.visual}\r\n                            toggleSource= {this.toggleSource} toggleDestination= {this.toggleDestination}/>\r\n                </div>\r\n                <div id=\"Board\">\r\n                    <Grid start={this.state.start} end={this.state.end} height={this.state.height}  multipledestinations = {this.state.multipledestinations} bi={this.state.bi}\r\n                          width={this.state.width} grid={this.state.grid} changeState={this.changeState} changesourcefunc={this.changedSource} changedestfunc = {this.changedDestination}\r\n                          pointer={this.state.pointer} pointer2={this.state.pointer2} changeSource = {this.state.changeSource} changeDestination = {this.state.changeDestination} />\r\n                </div>\r\n                <D show={this.state.modalshow} handleClose={this.hideModal} />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;","import React, {Component} from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport BackgroundSlider from 'react-background-slider'\r\nimport mars1 from '../media/mars1.jpg';\r\nimport mars2 from '../media/mars2.jpg';\r\nimport mars3 from '../media/mars3.jpg';\r\nimport mars4 from '../media/mars4.png';\r\nimport mars5 from '../media/mars5.jpg';\r\nimport mars6 from '../media/mars6.jpg';\r\nimport mars7 from '../media/mars7.jpg';\r\nimport mars8 from '../media/mars8.jpg';\r\nimport mars9 from '../media/mars9.jpg';\r\n\r\nimport {Redirect} from 'react-router-dom';\r\nimport Background from './LANDING.png';\r\n\r\n\r\nclass Welcome extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isChecked1: false,\r\n            isChecked2: false,\r\n            userAnswer: null,\r\n        };\r\n    }\r\n    toggleChange = (option) => {\r\n        if (option === 1) {\r\n            this.setState({isChecked1: true, isChecked2: false, userAnswer: 'True'});\r\n        } else {\r\n            this.setState({isChecked1: false, isChecked2: true, userAnswer: 'False'});\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Modal\r\n                    show={this.props.show}\r\n                    onHide={this.props.handleClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    style={{\r\n                        backgroundColor:\"#3423ae 80%\",\r\n                    }}\r\n\r\n                >\r\n                    <Modal.Header closeButton style={{\r\n                        backgroundColor: '#89daff',\r\n                        opacity: '100%',\r\n                    }}>\r\n                        <Modal.Title>Get Aboard!</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body style={{\r\n                        backgroundColor: '#89daff',\r\n                        opacity: '100%',\r\n                    }}>\r\n                        <div><i>Answer this to move ahead!</i></div>\r\n                        <div>{this.props.question}</div>\r\n                        <div>\r\n                            <label>\r\n                                <input type=\"checkbox\"\r\n                                       checked={this.state.isChecked1}\r\n                                       onChange={()=>this.toggleChange(1)}\r\n                                />\r\n                                True\r\n                            </label>\r\n                        </div>\r\n                        <div>\r\n                            <label>\r\n                                <input type=\"checkbox\"\r\n                                       checked={this.state.isChecked2}\r\n                                       onChange={()=>this.toggleChange(2)}\r\n                                />\r\n                                False\r\n                            </label>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer\r\n                        style={{\r\n                            backgroundColor: '#89daff',\r\n                            opacity: '100%',\r\n                        }}>\r\n                        <Button variant=\"danger\" onClick={this.props.handleClose} style={{\r\n                            backgroundColor: '#ff0000',\r\n                        }}>\r\n                            Try Later\r\n                        </Button>\r\n                        <Button variant=\"primary\" style={{\r\n                            backgroundColor: '#00ff00',\r\n                        }}\r\n                                onClick={()=>this.props.onSubmit(this.state.userAnswer)}>\r\n                            LETS GO!\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\nfunction httpGet(theUrl) {\r\n    const xmlHttp = new XMLHttpRequest();\r\n    xmlHttp.open( 'GET', theUrl, false ); // false for synchronous request\r\n    xmlHttp.send( null );\r\n    return xmlHttp.responseText;\r\n}\r\nclass Home extends Component {\r\n    state = {\r\n        show: false,\r\n        redirect: null,\r\n        question: null,\r\n        answer: null,\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let res = httpGet('https://opentdb.com/api.php?amount=1&category=18&type=boolean');\r\n            res = JSON.parse(res);\r\n            res = res['results'][0];\r\n            res['question'] = res['question'].replace(/&quot;/gi,\"\\\"\");\r\n            res['question'] = res['question'].replace(/&#034;/gi,\"/'\");\r\n            this.setState({question: res['question'], answer: res['correct_answer']});\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    onSubmit(option) {\r\n        if (option === this.state.answer) {\r\n\r\n            this.setState({redirect: '/mars-colonization-project/App'});\r\n            this.setState({redirect: '/App'});\r\n        } else {\r\n            alert('Wrong Option Chosen');\r\n        }\r\n    }\r\n    handleShow = () => {\r\n        this.setState({show: true});\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({show: false});\r\n    };\r\n\r\n    render() {\r\n        if (this.state.redirect !== null) {\r\n            return <Redirect to='/mars-colonization-project/App'/>;\r\n\r\n        }\r\n        return (\r\n\r\n            <div id = \"home\" style={{background: 'url(' + {Background} + ')', width: '100%', height: '100%', backgroundPosition: 'center', backgroundSize: 'cover', backgroundRepeat: 'no-repeat'}}>\r\n                    <div id=\"MissionTitle\" className=\"mb-4 p-4\" style={{backgroundColor: '#e5e5e5',opacity:'70%', borderRadius:'25%',float:'right', width:'25%', height:'25%',fontSize:'2em',marginTop:'35px'}}>\r\n                        <p><b>&nbsp;&nbsp;&nbsp;&nbsp;MISSION</b></p>\r\n                            <p><b> COLONIZE MARS! </b></p>\r\n                    </div>\r\n\r\n\r\n\r\n                <Button variant=\"primary\" size=\"lg\" onClick={this.handleShow} style={{\r\n                    backgroundColor: '#283618',\r\n                    color: '#fefae0',\r\n                    position: 'relative',\r\n                    margin:'20%',\r\n                    marginLeft:'38%'\r\n                }}>\r\n                    <strong>LAUNCH TO MARS</strong>\r\n                </Button>\r\n                <Welcome question = {this.state.question} answer = {this.state.answer} handleClose={this.handleClose} show={this.state.show} handleShow={this.handleShow} onSubmit={this.onSubmit.bind(this)}/>\r\n                <BackgroundSlider images={[mars7,mars1,mars2,mars5,mars7,mars3,mars4,mars8,mars9,mars6]} duration={3} transition={0}/>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport App from './App';\r\nimport Home from './components/Home';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\n\r\n\r\n/**\r\n *\r\n * @return {*}\r\n * @constructor\r\n */\r\nexport default function Root() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n\r\n        <Route exact path=\"/mars-colonization-project\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/mars-colonization-project/App\">\r\n          <App />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then((registration) => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n                console.log(\r\n                    'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n                );\r\n\r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n\r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: {'Service-Worker': 'script'},\r\n  })\r\n      .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n        // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n            'No internet connection found. App is running in offline mode.',\r\n        );\r\n      });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n        .then((registration) => {\r\n          registration.unregister();\r\n        })\r\n        .catch((error) => {\r\n          console.error(error.message);\r\n        });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Root from './Root';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <Root />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}